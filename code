{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Data goes through a series of steps during preprocessing:\n",
    "    \n",
    "1.Data Cleaning: Data is cleansed through processes such as filling in missing values, smoothing the noisy data, or resolving the inconsistencies in the data.\n",
    "2.Data Integration: Data with different representations are put together and conflicts within the data are resolved.\n",
    "3.Data Transformation: Data is normalized, aggregated and generalized.\n",
    "4.Data Reduction: This step aims to present a reduced representation of the data in a data warehouse.\n",
    "5.Data Discretization: Involves the reduction of a number of values of a continuous attribute by dividing the range of attribute intervals."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>DATA PREPROCESSING ON CONCATENATED DATA SET"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pandas is an open-source, BSD-licensed Python library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language. Pandas takes data (like a CSV or TSV file, or a SQL database) and creates a Python object with rows and columns called data frame that looks very similar to table in a statistical software "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd #importing pandas library"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>1. Reading the data from the excel file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=pd.read_csv(\"C:\\\\Users\\\\Administrator.EONEHYD016\\\\Downloads\\\\Train1.csv\")   #reading train dataset\n",
    "df2=pd.read_csv(\"C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\DS\\\\Test2.csv\") #reading test datset\n",
    "  #this head() shows the first five rows in the table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>2. Concatenating train and test data set "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>duration</th>\n",
       "      <th>protocol_type</th>\n",
       "      <th>service</th>\n",
       "      <th>flag</th>\n",
       "      <th>src_bytes</th>\n",
       "      <th>dst_bytes</th>\n",
       "      <th>land</th>\n",
       "      <th>wrong_fragment</th>\n",
       "      <th>urgent</th>\n",
       "      <th>hot</th>\n",
       "      <th>...</th>\n",
       "      <th>dst_host_same_srv_rate</th>\n",
       "      <th>dst_host_diff_srv_rate</th>\n",
       "      <th>dst_host_same_src_port_rate</th>\n",
       "      <th>dst_host_srv_diff_host_rate</th>\n",
       "      <th>dst_host_serror_rate</th>\n",
       "      <th>dst_host_srv_serror_rate</th>\n",
       "      <th>dst_host_rerror_rate</th>\n",
       "      <th>dst_host_srv_rerror_rate</th>\n",
       "      <th>attack</th>\n",
       "      <th>last_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>ftp_data</td>\n",
       "      <td>SF</td>\n",
       "      <td>491</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>udp</td>\n",
       "      <td>other</td>\n",
       "      <td>SF</td>\n",
       "      <td>146</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.60</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>232</td>\n",
       "      <td>8153</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>199</td>\n",
       "      <td>420</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>remote_job</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>287</td>\n",
       "      <td>2251</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.12</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>ftp_data</td>\n",
       "      <td>SF</td>\n",
       "      <td>334</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>warezclient</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>name</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>netbios_ns</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>300</td>\n",
       "      <td>13788</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0</td>\n",
       "      <td>icmp</td>\n",
       "      <td>eco_i</td>\n",
       "      <td>SF</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>ipsweep</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>233</td>\n",
       "      <td>616</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>343</td>\n",
       "      <td>1178</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>mtp</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>253</td>\n",
       "      <td>11905</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>5607</td>\n",
       "      <td>udp</td>\n",
       "      <td>other</td>\n",
       "      <td>SF</td>\n",
       "      <td>147</td>\n",
       "      <td>105</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>mtp</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>507</td>\n",
       "      <td>tcp</td>\n",
       "      <td>telnet</td>\n",
       "      <td>SF</td>\n",
       "      <td>437</td>\n",
       "      <td>14421</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.53</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.16</td>\n",
       "      <td>normal</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>227</td>\n",
       "      <td>6588</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0.57</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>215</td>\n",
       "      <td>10499</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>241</td>\n",
       "      <td>1400</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148487</th>\n",
       "      <td>0</td>\n",
       "      <td>udp</td>\n",
       "      <td>other</td>\n",
       "      <td>SF</td>\n",
       "      <td>115</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.09</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148488</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0.41</td>\n",
       "      <td>0.41</td>\n",
       "      <td>apache2</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148489</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>322</td>\n",
       "      <td>396</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148490</th>\n",
       "      <td>7498</td>\n",
       "      <td>tcp</td>\n",
       "      <td>telnet</td>\n",
       "      <td>SF</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.36</td>\n",
       "      <td>0.37</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>processtable</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148491</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>295</td>\n",
       "      <td>757</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148492</th>\n",
       "      <td>8209</td>\n",
       "      <td>tcp</td>\n",
       "      <td>telnet</td>\n",
       "      <td>SF</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.84</td>\n",
       "      <td>0.00</td>\n",
       "      <td>processtable</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148493</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.14</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1.00</td>\n",
       "      <td>satan</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148494</th>\n",
       "      <td>0</td>\n",
       "      <td>udp</td>\n",
       "      <td>private</td>\n",
       "      <td>SF</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.54</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>satan</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148495</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>54540</td>\n",
       "      <td>8314</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.05</td>\n",
       "      <td>back</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148496</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>289</td>\n",
       "      <td>9522</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148497</th>\n",
       "      <td>15</td>\n",
       "      <td>tcp</td>\n",
       "      <td>ftp</td>\n",
       "      <td>SF</td>\n",
       "      <td>45</td>\n",
       "      <td>214</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>rootkit</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148498</th>\n",
       "      <td>2064</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>RSTR</td>\n",
       "      <td>55744</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.55</td>\n",
       "      <td>0.57</td>\n",
       "      <td>apache2</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148499</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>169</td>\n",
       "      <td>4997</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.02</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148500</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>236</td>\n",
       "      <td>16257</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.25</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148501</th>\n",
       "      <td>0</td>\n",
       "      <td>icmp</td>\n",
       "      <td>ecr_i</td>\n",
       "      <td>SF</td>\n",
       "      <td>1032</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>smurf</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148502</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>finger</td>\n",
       "      <td>SF</td>\n",
       "      <td>9</td>\n",
       "      <td>139</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148503</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.79</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.21</td>\n",
       "      <td>0.71</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148504</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>S0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148505</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>264</td>\n",
       "      <td>14839</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148506</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>274</td>\n",
       "      <td>1623</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148507</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>private</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148508</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>280</td>\n",
       "      <td>6087</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.20</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148509</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>iso_tsap</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>neptune</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148510</th>\n",
       "      <td>1</td>\n",
       "      <td>tcp</td>\n",
       "      <td>smtp</td>\n",
       "      <td>SF</td>\n",
       "      <td>2599</td>\n",
       "      <td>293</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.73</td>\n",
       "      <td>0.13</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.26</td>\n",
       "      <td>0.00</td>\n",
       "      <td>mailbomb</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148511</th>\n",
       "      <td>0</td>\n",
       "      <td>icmp</td>\n",
       "      <td>ecr_i</td>\n",
       "      <td>SF</td>\n",
       "      <td>1032</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>smurf</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148512</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>smtp</td>\n",
       "      <td>SF</td>\n",
       "      <td>794</td>\n",
       "      <td>333</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.72</td>\n",
       "      <td>0.06</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148513</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>317</td>\n",
       "      <td>938</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148514</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>http</td>\n",
       "      <td>SF</td>\n",
       "      <td>54540</td>\n",
       "      <td>8314</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.07</td>\n",
       "      <td>back</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148515</th>\n",
       "      <td>0</td>\n",
       "      <td>udp</td>\n",
       "      <td>domain_u</td>\n",
       "      <td>SF</td>\n",
       "      <td>42</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>normal</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148516</th>\n",
       "      <td>0</td>\n",
       "      <td>tcp</td>\n",
       "      <td>sunrpc</td>\n",
       "      <td>REJ</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.44</td>\n",
       "      <td>1.00</td>\n",
       "      <td>mscan</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>148517 rows × 43 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        duration protocol_type     service  flag  src_bytes  dst_bytes  land  \\\n",
       "0              0           tcp    ftp_data    SF        491          0     0   \n",
       "1              0           udp       other    SF        146          0     0   \n",
       "2              0           tcp     private    S0          0          0     0   \n",
       "3              0           tcp        http    SF        232       8153     0   \n",
       "4              0           tcp        http    SF        199        420     0   \n",
       "5              0           tcp     private   REJ          0          0     0   \n",
       "6              0           tcp     private    S0          0          0     0   \n",
       "7              0           tcp     private    S0          0          0     0   \n",
       "8              0           tcp  remote_job    S0          0          0     0   \n",
       "9              0           tcp     private    S0          0          0     0   \n",
       "10             0           tcp     private   REJ          0          0     0   \n",
       "11             0           tcp     private    S0          0          0     0   \n",
       "12             0           tcp        http    SF        287       2251     0   \n",
       "13             0           tcp    ftp_data    SF        334          0     0   \n",
       "14             0           tcp        name    S0          0          0     0   \n",
       "15             0           tcp  netbios_ns    S0          0          0     0   \n",
       "16             0           tcp        http    SF        300      13788     0   \n",
       "17             0          icmp       eco_i    SF         18          0     0   \n",
       "18             0           tcp        http    SF        233        616     0   \n",
       "19             0           tcp        http    SF        343       1178     0   \n",
       "20             0           tcp         mtp    S0          0          0     0   \n",
       "21             0           tcp     private    S0          0          0     0   \n",
       "22             0           tcp        http    SF        253      11905     0   \n",
       "23          5607           udp       other    SF        147        105     0   \n",
       "24             0           tcp         mtp    S0          0          0     0   \n",
       "25           507           tcp      telnet    SF        437      14421     0   \n",
       "26             0           tcp     private    S0          0          0     0   \n",
       "27             0           tcp        http    SF        227       6588     0   \n",
       "28             0           tcp        http    SF        215      10499     0   \n",
       "29             0           tcp        http    SF        241       1400     0   \n",
       "...          ...           ...         ...   ...        ...        ...   ...   \n",
       "148487         0           udp       other    SF        115          0     0   \n",
       "148488         0           tcp        http    S0          0          0     0   \n",
       "148489         0           tcp        http    SF        322        396     0   \n",
       "148490      7498           tcp      telnet    SF          0         44     0   \n",
       "148491         0           tcp        http    SF        295        757     0   \n",
       "148492      8209           tcp      telnet    SF          0         15     0   \n",
       "148493         0           tcp     private   REJ          0          0     0   \n",
       "148494         0           udp     private    SF          1          1     0   \n",
       "148495         0           tcp        http    SF      54540       8314     0   \n",
       "148496         0           tcp        http    SF        289       9522     0   \n",
       "148497        15           tcp         ftp    SF         45        214     0   \n",
       "148498      2064           tcp        http  RSTR      55744          0     0   \n",
       "148499         0           tcp        http    SF        169       4997     0   \n",
       "148500         0           tcp        http    SF        236      16257     0   \n",
       "148501         0          icmp       ecr_i    SF       1032          0     0   \n",
       "148502         0           tcp      finger    SF          9        139     0   \n",
       "148503         0           tcp     private    S0          0          0     0   \n",
       "148504         0           tcp     private    S0          0          0     0   \n",
       "148505         0           tcp        http    SF        264      14839     0   \n",
       "148506         0           tcp        http    SF        274       1623     0   \n",
       "148507         0           tcp     private   REJ          0          0     0   \n",
       "148508         0           tcp        http    SF        280       6087     0   \n",
       "148509         0           tcp    iso_tsap   REJ          0          0     0   \n",
       "148510         1           tcp        smtp    SF       2599        293     0   \n",
       "148511         0          icmp       ecr_i    SF       1032          0     0   \n",
       "148512         0           tcp        smtp    SF        794        333     0   \n",
       "148513         0           tcp        http    SF        317        938     0   \n",
       "148514         0           tcp        http    SF      54540       8314     0   \n",
       "148515         0           udp    domain_u    SF         42         42     0   \n",
       "148516         0           tcp      sunrpc   REJ          0          0     0   \n",
       "\n",
       "        wrong_fragment  urgent  hot    ...      dst_host_same_srv_rate  \\\n",
       "0                    0       0    0    ...                        0.17   \n",
       "1                    0       0    0    ...                        0.00   \n",
       "2                    0       0    0    ...                        0.10   \n",
       "3                    0       0    0    ...                        1.00   \n",
       "4                    0       0    0    ...                        1.00   \n",
       "5                    0       0    0    ...                        0.07   \n",
       "6                    0       0    0    ...                        0.04   \n",
       "7                    0       0    0    ...                        0.06   \n",
       "8                    0       0    0    ...                        0.09   \n",
       "9                    0       0    0    ...                        0.05   \n",
       "10                   0       0    0    ...                        0.05   \n",
       "11                   0       0    0    ...                        0.05   \n",
       "12                   0       0    0    ...                        1.00   \n",
       "13                   0       0    0    ...                        1.00   \n",
       "14                   0       0    0    ...                        0.00   \n",
       "15                   0       0    0    ...                        0.01   \n",
       "16                   0       0    0    ...                        1.00   \n",
       "17                   0       0    0    ...                        1.00   \n",
       "18                   0       0    0    ...                        1.00   \n",
       "19                   0       0    0    ...                        1.00   \n",
       "20                   0       0    0    ...                        0.09   \n",
       "21                   0       0    0    ...                        0.07   \n",
       "22                   0       0    0    ...                        1.00   \n",
       "23                   0       0    0    ...                        0.00   \n",
       "24                   0       0    0    ...                        0.01   \n",
       "25                   0       0    0    ...                        0.10   \n",
       "26                   0       0    0    ...                        0.05   \n",
       "27                   0       0    0    ...                        1.00   \n",
       "28                   0       0    0    ...                        1.00   \n",
       "29                   0       0    0    ...                        1.00   \n",
       "...                ...     ...  ...    ...                         ...   \n",
       "148487               0       0    0    ...                        0.09   \n",
       "148488               0       0    0    ...                        1.00   \n",
       "148489               0       0    0    ...                        1.00   \n",
       "148490               0       0    0    ...                        0.75   \n",
       "148491               0       0    0    ...                        1.00   \n",
       "148492               0       0    0    ...                        0.04   \n",
       "148493               0       0    0    ...                        0.00   \n",
       "148494               0       0    0    ...                        0.00   \n",
       "148495               0       0    2    ...                        1.00   \n",
       "148496               0       0    0    ...                        1.00   \n",
       "148497               0       0    0    ...                        0.02   \n",
       "148498               0       0    0    ...                        0.96   \n",
       "148499               0       0    0    ...                        1.00   \n",
       "148500               0       0    0    ...                        1.00   \n",
       "148501               0       0    0    ...                        1.00   \n",
       "148502               0       0    0    ...                        0.04   \n",
       "148503               0       0    0    ...                        0.03   \n",
       "148504               0       0    0    ...                        0.05   \n",
       "148505               0       0    0    ...                        1.00   \n",
       "148506               0       0    0    ...                        1.00   \n",
       "148507               0       0    0    ...                        0.04   \n",
       "148508               0       0    0    ...                        1.00   \n",
       "148509               0       0    0    ...                        0.07   \n",
       "148510               0       0    0    ...                        0.73   \n",
       "148511               0       0    0    ...                        1.00   \n",
       "148512               0       0    0    ...                        0.72   \n",
       "148513               0       0    0    ...                        1.00   \n",
       "148514               0       0    2    ...                        1.00   \n",
       "148515               0       0    0    ...                        0.99   \n",
       "148516               0       0    0    ...                        0.08   \n",
       "\n",
       "        dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n",
       "0                         0.03                         0.17   \n",
       "1                         0.60                         0.88   \n",
       "2                         0.05                         0.00   \n",
       "3                         0.00                         0.03   \n",
       "4                         0.00                         0.00   \n",
       "5                         0.07                         0.00   \n",
       "6                         0.05                         0.00   \n",
       "7                         0.07                         0.00   \n",
       "8                         0.05                         0.00   \n",
       "9                         0.06                         0.00   \n",
       "10                        0.07                         0.00   \n",
       "11                        0.07                         0.00   \n",
       "12                        0.00                         0.12   \n",
       "13                        0.00                         1.00   \n",
       "14                        0.07                         0.00   \n",
       "15                        0.06                         0.00   \n",
       "16                        0.00                         0.01   \n",
       "17                        0.00                         1.00   \n",
       "18                        0.00                         0.02   \n",
       "19                        0.00                         0.01   \n",
       "20                        0.05                         0.00   \n",
       "21                        0.06                         0.00   \n",
       "22                        0.00                         0.01   \n",
       "23                        0.85                         1.00   \n",
       "24                        0.06                         0.00   \n",
       "25                        0.05                         0.00   \n",
       "26                        0.07                         0.00   \n",
       "27                        0.00                         0.02   \n",
       "28                        0.00                         0.00   \n",
       "29                        0.00                         0.00   \n",
       "...                        ...                          ...   \n",
       "148487                    0.04                         0.14   \n",
       "148488                    0.00                         0.00   \n",
       "148489                    0.00                         0.03   \n",
       "148490                    0.02                         0.00   \n",
       "148491                    0.00                         0.00   \n",
       "148492                    0.85                         0.00   \n",
       "148493                    0.14                         0.00   \n",
       "148494                    0.54                         0.97   \n",
       "148495                    0.00                         0.00   \n",
       "148496                    0.00                         0.01   \n",
       "148497                    0.03                         0.00   \n",
       "148498                    0.01                         0.00   \n",
       "148499                    0.00                         0.02   \n",
       "148500                    0.00                         0.25   \n",
       "148501                    0.00                         1.00   \n",
       "148502                    0.03                         0.01   \n",
       "148503                    0.08                         0.00   \n",
       "148504                    0.07                         0.00   \n",
       "148505                    0.00                         0.00   \n",
       "148506                    0.00                         0.01   \n",
       "148507                    0.07                         0.00   \n",
       "148508                    0.00                         0.20   \n",
       "148509                    0.05                         0.00   \n",
       "148510                    0.13                         0.00   \n",
       "148511                    0.00                         1.00   \n",
       "148512                    0.06                         0.01   \n",
       "148513                    0.00                         0.01   \n",
       "148514                    0.00                         0.00   \n",
       "148515                    0.01                         0.00   \n",
       "148516                    0.03                         0.00   \n",
       "\n",
       "        dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n",
       "0                              0.00                  0.00   \n",
       "1                              0.00                  0.00   \n",
       "2                              0.00                  1.00   \n",
       "3                              0.04                  0.03   \n",
       "4                              0.00                  0.00   \n",
       "5                              0.00                  0.00   \n",
       "6                              0.00                  1.00   \n",
       "7                              0.00                  1.00   \n",
       "8                              0.00                  1.00   \n",
       "9                              0.00                  1.00   \n",
       "10                             0.00                  0.00   \n",
       "11                             0.00                  1.00   \n",
       "12                             0.03                  0.00   \n",
       "13                             0.20                  0.00   \n",
       "14                             0.00                  1.00   \n",
       "15                             0.00                  1.00   \n",
       "16                             0.02                  0.00   \n",
       "17                             1.00                  0.00   \n",
       "18                             0.03                  0.00   \n",
       "19                             0.04                  0.00   \n",
       "20                             0.00                  1.00   \n",
       "21                             0.00                  0.99   \n",
       "22                             0.02                  0.00   \n",
       "23                             0.00                  0.00   \n",
       "24                             0.00                  1.00   \n",
       "25                             0.00                  0.53   \n",
       "26                             0.00                  1.00   \n",
       "27                             0.14                  0.00   \n",
       "28                             0.00                  0.00   \n",
       "29                             0.00                  0.00   \n",
       "...                             ...                   ...   \n",
       "148487                         0.00                  0.00   \n",
       "148488                         0.00                  0.56   \n",
       "148489                         0.03                  0.00   \n",
       "148490                         0.00                  0.36   \n",
       "148491                         0.00                  0.00   \n",
       "148492                         0.00                  0.00   \n",
       "148493                         0.00                  0.04   \n",
       "148494                         0.00                  0.00   \n",
       "148495                         0.00                  0.01   \n",
       "148496                         0.03                  0.00   \n",
       "148497                         0.00                  0.00   \n",
       "148498                         0.00                  0.02   \n",
       "148499                         0.02                  0.00   \n",
       "148500                         0.06                  0.00   \n",
       "148501                         0.00                  0.00   \n",
       "148502                         0.00                  0.00   \n",
       "148503                         0.00                  0.79   \n",
       "148504                         0.00                  1.00   \n",
       "148505                         0.00                  0.00   \n",
       "148506                         0.04                  0.00   \n",
       "148507                         0.00                  0.00   \n",
       "148508                         0.04                  0.00   \n",
       "148509                         0.00                  0.00   \n",
       "148510                         0.00                  0.00   \n",
       "148511                         0.00                  0.00   \n",
       "148512                         0.01                  0.01   \n",
       "148513                         0.01                  0.01   \n",
       "148514                         0.00                  0.00   \n",
       "148515                         0.00                  0.00   \n",
       "148516                         0.00                  0.00   \n",
       "\n",
       "        dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n",
       "0                           0.00                  0.05   \n",
       "1                           0.00                  0.00   \n",
       "2                           1.00                  0.00   \n",
       "3                           0.01                  0.00   \n",
       "4                           0.00                  0.00   \n",
       "5                           0.00                  1.00   \n",
       "6                           1.00                  0.00   \n",
       "7                           1.00                  0.00   \n",
       "8                           1.00                  0.00   \n",
       "9                           1.00                  0.00   \n",
       "10                          0.00                  1.00   \n",
       "11                          1.00                  0.00   \n",
       "12                          0.00                  0.00   \n",
       "13                          0.00                  0.00   \n",
       "14                          1.00                  0.00   \n",
       "15                          1.00                  0.00   \n",
       "16                          0.00                  0.00   \n",
       "17                          0.00                  0.00   \n",
       "18                          0.00                  0.02   \n",
       "19                          0.00                  0.00   \n",
       "20                          1.00                  0.00   \n",
       "21                          1.00                  0.00   \n",
       "22                          0.00                  0.00   \n",
       "23                          0.00                  0.00   \n",
       "24                          1.00                  0.00   \n",
       "25                          0.00                  0.02   \n",
       "26                          1.00                  0.00   \n",
       "27                          0.00                  0.56   \n",
       "28                          0.00                  0.00   \n",
       "29                          0.00                  0.00   \n",
       "...                          ...                   ...   \n",
       "148487                      0.00                  0.07   \n",
       "148488                      0.56                  0.41   \n",
       "148489                      0.00                  0.00   \n",
       "148490                      0.37                  0.01   \n",
       "148491                      0.00                  0.00   \n",
       "148492                      0.00                  0.84   \n",
       "148493                      0.00                  0.85   \n",
       "148494                      0.00                  0.03   \n",
       "148495                      0.01                  0.05   \n",
       "148496                      0.00                  0.00   \n",
       "148497                      0.00                  0.00   \n",
       "148498                      0.02                  0.55   \n",
       "148499                      0.00                  0.00   \n",
       "148500                      0.00                  0.00   \n",
       "148501                      0.00                  0.00   \n",
       "148502                      0.00                  0.01   \n",
       "148503                      0.29                  0.21   \n",
       "148504                      1.00                  0.00   \n",
       "148505                      0.00                  0.00   \n",
       "148506                      0.00                  0.00   \n",
       "148507                      0.00                  1.00   \n",
       "148508                      0.00                  0.00   \n",
       "148509                      0.00                  1.00   \n",
       "148510                      0.00                  0.26   \n",
       "148511                      0.00                  0.00   \n",
       "148512                      0.00                  0.00   \n",
       "148513                      0.00                  0.00   \n",
       "148514                      0.00                  0.07   \n",
       "148515                      0.00                  0.00   \n",
       "148516                      0.00                  0.44   \n",
       "\n",
       "        dst_host_srv_rerror_rate        attack  last_flag  \n",
       "0                           0.00        normal         20  \n",
       "1                           0.00        normal         15  \n",
       "2                           0.00       neptune         19  \n",
       "3                           0.01        normal         21  \n",
       "4                           0.00        normal         21  \n",
       "5                           1.00       neptune         21  \n",
       "6                           0.00       neptune         21  \n",
       "7                           0.00       neptune         21  \n",
       "8                           0.00       neptune         21  \n",
       "9                           0.00       neptune         21  \n",
       "10                          1.00       neptune         21  \n",
       "11                          0.00       neptune         21  \n",
       "12                          0.00        normal         21  \n",
       "13                          0.00   warezclient         15  \n",
       "14                          0.00       neptune         19  \n",
       "15                          0.00       neptune         18  \n",
       "16                          0.00        normal         21  \n",
       "17                          0.00       ipsweep         18  \n",
       "18                          0.00        normal         21  \n",
       "19                          0.00        normal         21  \n",
       "20                          0.00       neptune         18  \n",
       "21                          0.00       neptune         18  \n",
       "22                          0.00        normal         21  \n",
       "23                          0.00        normal         21  \n",
       "24                          0.00       neptune         19  \n",
       "25                          0.16        normal         20  \n",
       "26                          0.00       neptune         21  \n",
       "27                          0.57        normal         21  \n",
       "28                          0.00        normal         21  \n",
       "29                          0.00        normal         21  \n",
       "...                          ...           ...        ...  \n",
       "148487                      0.00        normal         16  \n",
       "148488                      0.41       apache2         17  \n",
       "148489                      0.00        normal         21  \n",
       "148490                      0.01  processtable         18  \n",
       "148491                      0.00        normal         21  \n",
       "148492                      0.00  processtable         12  \n",
       "148493                      1.00         satan         20  \n",
       "148494                      0.00         satan         17  \n",
       "148495                      0.05          back         15  \n",
       "148496                      0.00        normal         21  \n",
       "148497                      0.00       rootkit          4  \n",
       "148498                      0.57       apache2         14  \n",
       "148499                      0.00        normal         21  \n",
       "148500                      0.00        normal         21  \n",
       "148501                      0.00         smurf         19  \n",
       "148502                      0.00        normal         21  \n",
       "148503                      0.71       neptune         21  \n",
       "148504                      0.00       neptune         21  \n",
       "148505                      0.00        normal         21  \n",
       "148506                      0.00        normal         21  \n",
       "148507                      1.00       neptune         21  \n",
       "148508                      0.00        normal         21  \n",
       "148509                      1.00       neptune         20  \n",
       "148510                      0.00      mailbomb         11  \n",
       "148511                      0.00         smurf         20  \n",
       "148512                      0.00        normal         21  \n",
       "148513                      0.00        normal         21  \n",
       "148514                      0.07          back         15  \n",
       "148515                      0.00        normal         21  \n",
       "148516                      1.00         mscan         14  \n",
       "\n",
       "[148517 rows x 43 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3=pd.concat([df1,df2],ignore_index=True) #concat is used to join two saperate data set \n",
    "df3\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>3. Understanding the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(148517, 43)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.shape #informs about the number of rows and columns in a dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 148517 entries, 0 to 148516\n",
      "Data columns (total 43 columns):\n",
      "duration                       148517 non-null int64\n",
      "protocol_type                  148517 non-null object\n",
      "service                        148517 non-null object\n",
      "flag                           148517 non-null object\n",
      "src_bytes                      148517 non-null int64\n",
      "dst_bytes                      148517 non-null int64\n",
      "land                           148517 non-null int64\n",
      "wrong_fragment                 148517 non-null int64\n",
      "urgent                         148517 non-null int64\n",
      "hot                            148517 non-null int64\n",
      "num_failed_logins              148517 non-null int64\n",
      "logged_in                      148517 non-null int64\n",
      "num_compromised                148517 non-null int64\n",
      "root_shell                     148517 non-null int64\n",
      "su_attempted                   148517 non-null int64\n",
      "num_root                       148517 non-null int64\n",
      "num_file_creations             148517 non-null int64\n",
      "num_shells                     148517 non-null int64\n",
      "num_access_files               148517 non-null int64\n",
      "num_outbound_cmds              148517 non-null int64\n",
      "is_host_login                  148517 non-null int64\n",
      "is_guest_login                 148517 non-null int64\n",
      "count                          148517 non-null int64\n",
      "srv_count                      148517 non-null int64\n",
      "serror_rate                    148517 non-null float64\n",
      "srv_serror_rate                148517 non-null float64\n",
      "rerror_rate                    148517 non-null float64\n",
      "srv_rerror_rate                148517 non-null float64\n",
      "same_srv_rate                  148517 non-null float64\n",
      "diff_srv_rate                  148517 non-null float64\n",
      "srv_diff_host_rate             148517 non-null float64\n",
      "dst_host_count                 148517 non-null int64\n",
      "dst_host_srv_count             148517 non-null int64\n",
      "dst_host_same_srv_rate         148517 non-null float64\n",
      "dst_host_diff_srv_rate         148517 non-null float64\n",
      "dst_host_same_src_port_rate    148517 non-null float64\n",
      "dst_host_srv_diff_host_rate    148517 non-null float64\n",
      "dst_host_serror_rate           148517 non-null float64\n",
      "dst_host_srv_serror_rate       148517 non-null float64\n",
      "dst_host_rerror_rate           148517 non-null float64\n",
      "dst_host_srv_rerror_rate       148517 non-null float64\n",
      "attack                         148517 non-null object\n",
      "last_flag                      148517 non-null int64\n",
      "dtypes: float64(15), int64(24), object(4)\n",
      "memory usage: 48.7+ MB\n"
     ]
    }
   ],
   "source": [
    "df3.info() ##prints information about a DataFrame including the index dtype and column dtypes, non-null values and memory usage."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['duration', 'protocol_type', 'service', 'flag', 'src_bytes',\n",
       "       'dst_bytes', 'land', 'wrong_fragment', 'urgent', 'hot',\n",
       "       'num_failed_logins', 'logged_in', 'num_compromised', 'root_shell',\n",
       "       'su_attempted', 'num_root', 'num_file_creations', 'num_shells',\n",
       "       'num_access_files', 'num_outbound_cmds', 'is_host_login',\n",
       "       'is_guest_login', 'count', 'srv_count', 'serror_rate',\n",
       "       'srv_serror_rate', 'rerror_rate', 'srv_rerror_rate', 'same_srv_rate',\n",
       "       'diff_srv_rate', 'srv_diff_host_rate', 'dst_host_count',\n",
       "       'dst_host_srv_count', 'dst_host_same_srv_rate',\n",
       "       'dst_host_diff_srv_rate', 'dst_host_same_src_port_rate',\n",
       "       'dst_host_srv_diff_host_rate', 'dst_host_serror_rate',\n",
       "       'dst_host_srv_serror_rate', 'dst_host_rerror_rate',\n",
       "       'dst_host_srv_rerror_rate', 'attack', 'last_flag'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.columns #mentions all the names of columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.describe of         duration protocol_type     service  flag  src_bytes  dst_bytes  land  \\\n",
       "0              0           tcp    ftp_data    SF        491          0     0   \n",
       "1              0           udp       other    SF        146          0     0   \n",
       "2              0           tcp     private    S0          0          0     0   \n",
       "3              0           tcp        http    SF        232       8153     0   \n",
       "4              0           tcp        http    SF        199        420     0   \n",
       "5              0           tcp     private   REJ          0          0     0   \n",
       "6              0           tcp     private    S0          0          0     0   \n",
       "7              0           tcp     private    S0          0          0     0   \n",
       "8              0           tcp  remote_job    S0          0          0     0   \n",
       "9              0           tcp     private    S0          0          0     0   \n",
       "10             0           tcp     private   REJ          0          0     0   \n",
       "11             0           tcp     private    S0          0          0     0   \n",
       "12             0           tcp        http    SF        287       2251     0   \n",
       "13             0           tcp    ftp_data    SF        334          0     0   \n",
       "14             0           tcp        name    S0          0          0     0   \n",
       "15             0           tcp  netbios_ns    S0          0          0     0   \n",
       "16             0           tcp        http    SF        300      13788     0   \n",
       "17             0          icmp       eco_i    SF         18          0     0   \n",
       "18             0           tcp        http    SF        233        616     0   \n",
       "19             0           tcp        http    SF        343       1178     0   \n",
       "20             0           tcp         mtp    S0          0          0     0   \n",
       "21             0           tcp     private    S0          0          0     0   \n",
       "22             0           tcp        http    SF        253      11905     0   \n",
       "23          5607           udp       other    SF        147        105     0   \n",
       "24             0           tcp         mtp    S0          0          0     0   \n",
       "25           507           tcp      telnet    SF        437      14421     0   \n",
       "26             0           tcp     private    S0          0          0     0   \n",
       "27             0           tcp        http    SF        227       6588     0   \n",
       "28             0           tcp        http    SF        215      10499     0   \n",
       "29             0           tcp        http    SF        241       1400     0   \n",
       "...          ...           ...         ...   ...        ...        ...   ...   \n",
       "148487         0           udp       other    SF        115          0     0   \n",
       "148488         0           tcp        http    S0          0          0     0   \n",
       "148489         0           tcp        http    SF        322        396     0   \n",
       "148490      7498           tcp      telnet    SF          0         44     0   \n",
       "148491         0           tcp        http    SF        295        757     0   \n",
       "148492      8209           tcp      telnet    SF          0         15     0   \n",
       "148493         0           tcp     private   REJ          0          0     0   \n",
       "148494         0           udp     private    SF          1          1     0   \n",
       "148495         0           tcp        http    SF      54540       8314     0   \n",
       "148496         0           tcp        http    SF        289       9522     0   \n",
       "148497        15           tcp         ftp    SF         45        214     0   \n",
       "148498      2064           tcp        http  RSTR      55744          0     0   \n",
       "148499         0           tcp        http    SF        169       4997     0   \n",
       "148500         0           tcp        http    SF        236      16257     0   \n",
       "148501         0          icmp       ecr_i    SF       1032          0     0   \n",
       "148502         0           tcp      finger    SF          9        139     0   \n",
       "148503         0           tcp     private    S0          0          0     0   \n",
       "148504         0           tcp     private    S0          0          0     0   \n",
       "148505         0           tcp        http    SF        264      14839     0   \n",
       "148506         0           tcp        http    SF        274       1623     0   \n",
       "148507         0           tcp     private   REJ          0          0     0   \n",
       "148508         0           tcp        http    SF        280       6087     0   \n",
       "148509         0           tcp    iso_tsap   REJ          0          0     0   \n",
       "148510         1           tcp        smtp    SF       2599        293     0   \n",
       "148511         0          icmp       ecr_i    SF       1032          0     0   \n",
       "148512         0           tcp        smtp    SF        794        333     0   \n",
       "148513         0           tcp        http    SF        317        938     0   \n",
       "148514         0           tcp        http    SF      54540       8314     0   \n",
       "148515         0           udp    domain_u    SF         42         42     0   \n",
       "148516         0           tcp      sunrpc   REJ          0          0     0   \n",
       "\n",
       "        wrong_fragment  urgent  hot    ...      dst_host_same_srv_rate  \\\n",
       "0                    0       0    0    ...                        0.17   \n",
       "1                    0       0    0    ...                        0.00   \n",
       "2                    0       0    0    ...                        0.10   \n",
       "3                    0       0    0    ...                        1.00   \n",
       "4                    0       0    0    ...                        1.00   \n",
       "5                    0       0    0    ...                        0.07   \n",
       "6                    0       0    0    ...                        0.04   \n",
       "7                    0       0    0    ...                        0.06   \n",
       "8                    0       0    0    ...                        0.09   \n",
       "9                    0       0    0    ...                        0.05   \n",
       "10                   0       0    0    ...                        0.05   \n",
       "11                   0       0    0    ...                        0.05   \n",
       "12                   0       0    0    ...                        1.00   \n",
       "13                   0       0    0    ...                        1.00   \n",
       "14                   0       0    0    ...                        0.00   \n",
       "15                   0       0    0    ...                        0.01   \n",
       "16                   0       0    0    ...                        1.00   \n",
       "17                   0       0    0    ...                        1.00   \n",
       "18                   0       0    0    ...                        1.00   \n",
       "19                   0       0    0    ...                        1.00   \n",
       "20                   0       0    0    ...                        0.09   \n",
       "21                   0       0    0    ...                        0.07   \n",
       "22                   0       0    0    ...                        1.00   \n",
       "23                   0       0    0    ...                        0.00   \n",
       "24                   0       0    0    ...                        0.01   \n",
       "25                   0       0    0    ...                        0.10   \n",
       "26                   0       0    0    ...                        0.05   \n",
       "27                   0       0    0    ...                        1.00   \n",
       "28                   0       0    0    ...                        1.00   \n",
       "29                   0       0    0    ...                        1.00   \n",
       "...                ...     ...  ...    ...                         ...   \n",
       "148487               0       0    0    ...                        0.09   \n",
       "148488               0       0    0    ...                        1.00   \n",
       "148489               0       0    0    ...                        1.00   \n",
       "148490               0       0    0    ...                        0.75   \n",
       "148491               0       0    0    ...                        1.00   \n",
       "148492               0       0    0    ...                        0.04   \n",
       "148493               0       0    0    ...                        0.00   \n",
       "148494               0       0    0    ...                        0.00   \n",
       "148495               0       0    2    ...                        1.00   \n",
       "148496               0       0    0    ...                        1.00   \n",
       "148497               0       0    0    ...                        0.02   \n",
       "148498               0       0    0    ...                        0.96   \n",
       "148499               0       0    0    ...                        1.00   \n",
       "148500               0       0    0    ...                        1.00   \n",
       "148501               0       0    0    ...                        1.00   \n",
       "148502               0       0    0    ...                        0.04   \n",
       "148503               0       0    0    ...                        0.03   \n",
       "148504               0       0    0    ...                        0.05   \n",
       "148505               0       0    0    ...                        1.00   \n",
       "148506               0       0    0    ...                        1.00   \n",
       "148507               0       0    0    ...                        0.04   \n",
       "148508               0       0    0    ...                        1.00   \n",
       "148509               0       0    0    ...                        0.07   \n",
       "148510               0       0    0    ...                        0.73   \n",
       "148511               0       0    0    ...                        1.00   \n",
       "148512               0       0    0    ...                        0.72   \n",
       "148513               0       0    0    ...                        1.00   \n",
       "148514               0       0    2    ...                        1.00   \n",
       "148515               0       0    0    ...                        0.99   \n",
       "148516               0       0    0    ...                        0.08   \n",
       "\n",
       "        dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n",
       "0                         0.03                         0.17   \n",
       "1                         0.60                         0.88   \n",
       "2                         0.05                         0.00   \n",
       "3                         0.00                         0.03   \n",
       "4                         0.00                         0.00   \n",
       "5                         0.07                         0.00   \n",
       "6                         0.05                         0.00   \n",
       "7                         0.07                         0.00   \n",
       "8                         0.05                         0.00   \n",
       "9                         0.06                         0.00   \n",
       "10                        0.07                         0.00   \n",
       "11                        0.07                         0.00   \n",
       "12                        0.00                         0.12   \n",
       "13                        0.00                         1.00   \n",
       "14                        0.07                         0.00   \n",
       "15                        0.06                         0.00   \n",
       "16                        0.00                         0.01   \n",
       "17                        0.00                         1.00   \n",
       "18                        0.00                         0.02   \n",
       "19                        0.00                         0.01   \n",
       "20                        0.05                         0.00   \n",
       "21                        0.06                         0.00   \n",
       "22                        0.00                         0.01   \n",
       "23                        0.85                         1.00   \n",
       "24                        0.06                         0.00   \n",
       "25                        0.05                         0.00   \n",
       "26                        0.07                         0.00   \n",
       "27                        0.00                         0.02   \n",
       "28                        0.00                         0.00   \n",
       "29                        0.00                         0.00   \n",
       "...                        ...                          ...   \n",
       "148487                    0.04                         0.14   \n",
       "148488                    0.00                         0.00   \n",
       "148489                    0.00                         0.03   \n",
       "148490                    0.02                         0.00   \n",
       "148491                    0.00                         0.00   \n",
       "148492                    0.85                         0.00   \n",
       "148493                    0.14                         0.00   \n",
       "148494                    0.54                         0.97   \n",
       "148495                    0.00                         0.00   \n",
       "148496                    0.00                         0.01   \n",
       "148497                    0.03                         0.00   \n",
       "148498                    0.01                         0.00   \n",
       "148499                    0.00                         0.02   \n",
       "148500                    0.00                         0.25   \n",
       "148501                    0.00                         1.00   \n",
       "148502                    0.03                         0.01   \n",
       "148503                    0.08                         0.00   \n",
       "148504                    0.07                         0.00   \n",
       "148505                    0.00                         0.00   \n",
       "148506                    0.00                         0.01   \n",
       "148507                    0.07                         0.00   \n",
       "148508                    0.00                         0.20   \n",
       "148509                    0.05                         0.00   \n",
       "148510                    0.13                         0.00   \n",
       "148511                    0.00                         1.00   \n",
       "148512                    0.06                         0.01   \n",
       "148513                    0.00                         0.01   \n",
       "148514                    0.00                         0.00   \n",
       "148515                    0.01                         0.00   \n",
       "148516                    0.03                         0.00   \n",
       "\n",
       "        dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n",
       "0                              0.00                  0.00   \n",
       "1                              0.00                  0.00   \n",
       "2                              0.00                  1.00   \n",
       "3                              0.04                  0.03   \n",
       "4                              0.00                  0.00   \n",
       "5                              0.00                  0.00   \n",
       "6                              0.00                  1.00   \n",
       "7                              0.00                  1.00   \n",
       "8                              0.00                  1.00   \n",
       "9                              0.00                  1.00   \n",
       "10                             0.00                  0.00   \n",
       "11                             0.00                  1.00   \n",
       "12                             0.03                  0.00   \n",
       "13                             0.20                  0.00   \n",
       "14                             0.00                  1.00   \n",
       "15                             0.00                  1.00   \n",
       "16                             0.02                  0.00   \n",
       "17                             1.00                  0.00   \n",
       "18                             0.03                  0.00   \n",
       "19                             0.04                  0.00   \n",
       "20                             0.00                  1.00   \n",
       "21                             0.00                  0.99   \n",
       "22                             0.02                  0.00   \n",
       "23                             0.00                  0.00   \n",
       "24                             0.00                  1.00   \n",
       "25                             0.00                  0.53   \n",
       "26                             0.00                  1.00   \n",
       "27                             0.14                  0.00   \n",
       "28                             0.00                  0.00   \n",
       "29                             0.00                  0.00   \n",
       "...                             ...                   ...   \n",
       "148487                         0.00                  0.00   \n",
       "148488                         0.00                  0.56   \n",
       "148489                         0.03                  0.00   \n",
       "148490                         0.00                  0.36   \n",
       "148491                         0.00                  0.00   \n",
       "148492                         0.00                  0.00   \n",
       "148493                         0.00                  0.04   \n",
       "148494                         0.00                  0.00   \n",
       "148495                         0.00                  0.01   \n",
       "148496                         0.03                  0.00   \n",
       "148497                         0.00                  0.00   \n",
       "148498                         0.00                  0.02   \n",
       "148499                         0.02                  0.00   \n",
       "148500                         0.06                  0.00   \n",
       "148501                         0.00                  0.00   \n",
       "148502                         0.00                  0.00   \n",
       "148503                         0.00                  0.79   \n",
       "148504                         0.00                  1.00   \n",
       "148505                         0.00                  0.00   \n",
       "148506                         0.04                  0.00   \n",
       "148507                         0.00                  0.00   \n",
       "148508                         0.04                  0.00   \n",
       "148509                         0.00                  0.00   \n",
       "148510                         0.00                  0.00   \n",
       "148511                         0.00                  0.00   \n",
       "148512                         0.01                  0.01   \n",
       "148513                         0.01                  0.01   \n",
       "148514                         0.00                  0.00   \n",
       "148515                         0.00                  0.00   \n",
       "148516                         0.00                  0.00   \n",
       "\n",
       "        dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n",
       "0                           0.00                  0.05   \n",
       "1                           0.00                  0.00   \n",
       "2                           1.00                  0.00   \n",
       "3                           0.01                  0.00   \n",
       "4                           0.00                  0.00   \n",
       "5                           0.00                  1.00   \n",
       "6                           1.00                  0.00   \n",
       "7                           1.00                  0.00   \n",
       "8                           1.00                  0.00   \n",
       "9                           1.00                  0.00   \n",
       "10                          0.00                  1.00   \n",
       "11                          1.00                  0.00   \n",
       "12                          0.00                  0.00   \n",
       "13                          0.00                  0.00   \n",
       "14                          1.00                  0.00   \n",
       "15                          1.00                  0.00   \n",
       "16                          0.00                  0.00   \n",
       "17                          0.00                  0.00   \n",
       "18                          0.00                  0.02   \n",
       "19                          0.00                  0.00   \n",
       "20                          1.00                  0.00   \n",
       "21                          1.00                  0.00   \n",
       "22                          0.00                  0.00   \n",
       "23                          0.00                  0.00   \n",
       "24                          1.00                  0.00   \n",
       "25                          0.00                  0.02   \n",
       "26                          1.00                  0.00   \n",
       "27                          0.00                  0.56   \n",
       "28                          0.00                  0.00   \n",
       "29                          0.00                  0.00   \n",
       "...                          ...                   ...   \n",
       "148487                      0.00                  0.07   \n",
       "148488                      0.56                  0.41   \n",
       "148489                      0.00                  0.00   \n",
       "148490                      0.37                  0.01   \n",
       "148491                      0.00                  0.00   \n",
       "148492                      0.00                  0.84   \n",
       "148493                      0.00                  0.85   \n",
       "148494                      0.00                  0.03   \n",
       "148495                      0.01                  0.05   \n",
       "148496                      0.00                  0.00   \n",
       "148497                      0.00                  0.00   \n",
       "148498                      0.02                  0.55   \n",
       "148499                      0.00                  0.00   \n",
       "148500                      0.00                  0.00   \n",
       "148501                      0.00                  0.00   \n",
       "148502                      0.00                  0.01   \n",
       "148503                      0.29                  0.21   \n",
       "148504                      1.00                  0.00   \n",
       "148505                      0.00                  0.00   \n",
       "148506                      0.00                  0.00   \n",
       "148507                      0.00                  1.00   \n",
       "148508                      0.00                  0.00   \n",
       "148509                      0.00                  1.00   \n",
       "148510                      0.00                  0.26   \n",
       "148511                      0.00                  0.00   \n",
       "148512                      0.00                  0.00   \n",
       "148513                      0.00                  0.00   \n",
       "148514                      0.00                  0.07   \n",
       "148515                      0.00                  0.00   \n",
       "148516                      0.00                  0.44   \n",
       "\n",
       "        dst_host_srv_rerror_rate        attack  last_flag  \n",
       "0                           0.00        normal         20  \n",
       "1                           0.00        normal         15  \n",
       "2                           0.00       neptune         19  \n",
       "3                           0.01        normal         21  \n",
       "4                           0.00        normal         21  \n",
       "5                           1.00       neptune         21  \n",
       "6                           0.00       neptune         21  \n",
       "7                           0.00       neptune         21  \n",
       "8                           0.00       neptune         21  \n",
       "9                           0.00       neptune         21  \n",
       "10                          1.00       neptune         21  \n",
       "11                          0.00       neptune         21  \n",
       "12                          0.00        normal         21  \n",
       "13                          0.00   warezclient         15  \n",
       "14                          0.00       neptune         19  \n",
       "15                          0.00       neptune         18  \n",
       "16                          0.00        normal         21  \n",
       "17                          0.00       ipsweep         18  \n",
       "18                          0.00        normal         21  \n",
       "19                          0.00        normal         21  \n",
       "20                          0.00       neptune         18  \n",
       "21                          0.00       neptune         18  \n",
       "22                          0.00        normal         21  \n",
       "23                          0.00        normal         21  \n",
       "24                          0.00       neptune         19  \n",
       "25                          0.16        normal         20  \n",
       "26                          0.00       neptune         21  \n",
       "27                          0.57        normal         21  \n",
       "28                          0.00        normal         21  \n",
       "29                          0.00        normal         21  \n",
       "...                          ...           ...        ...  \n",
       "148487                      0.00        normal         16  \n",
       "148488                      0.41       apache2         17  \n",
       "148489                      0.00        normal         21  \n",
       "148490                      0.01  processtable         18  \n",
       "148491                      0.00        normal         21  \n",
       "148492                      0.00  processtable         12  \n",
       "148493                      1.00         satan         20  \n",
       "148494                      0.00         satan         17  \n",
       "148495                      0.05          back         15  \n",
       "148496                      0.00        normal         21  \n",
       "148497                      0.00       rootkit          4  \n",
       "148498                      0.57       apache2         14  \n",
       "148499                      0.00        normal         21  \n",
       "148500                      0.00        normal         21  \n",
       "148501                      0.00         smurf         19  \n",
       "148502                      0.00        normal         21  \n",
       "148503                      0.71       neptune         21  \n",
       "148504                      0.00       neptune         21  \n",
       "148505                      0.00        normal         21  \n",
       "148506                      0.00        normal         21  \n",
       "148507                      1.00       neptune         21  \n",
       "148508                      0.00        normal         21  \n",
       "148509                      1.00       neptune         20  \n",
       "148510                      0.00      mailbomb         11  \n",
       "148511                      0.00         smurf         20  \n",
       "148512                      0.00        normal         21  \n",
       "148513                      0.00        normal         21  \n",
       "148514                      0.07          back         15  \n",
       "148515                      0.00        normal         21  \n",
       "148516                      1.00         mscan         14  \n",
       "\n",
       "[148517 rows x 43 columns]>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.describe #is used to view some basic statistical details like percentile, mean, std etc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "duration                         int64\n",
       "protocol_type                   object\n",
       "service                         object\n",
       "flag                            object\n",
       "src_bytes                        int64\n",
       "dst_bytes                        int64\n",
       "land                             int64\n",
       "wrong_fragment                   int64\n",
       "urgent                           int64\n",
       "hot                              int64\n",
       "num_failed_logins                int64\n",
       "logged_in                        int64\n",
       "num_compromised                  int64\n",
       "root_shell                       int64\n",
       "su_attempted                     int64\n",
       "num_root                         int64\n",
       "num_file_creations               int64\n",
       "num_shells                       int64\n",
       "num_access_files                 int64\n",
       "num_outbound_cmds                int64\n",
       "is_host_login                    int64\n",
       "is_guest_login                   int64\n",
       "count                            int64\n",
       "srv_count                        int64\n",
       "serror_rate                    float64\n",
       "srv_serror_rate                float64\n",
       "rerror_rate                    float64\n",
       "srv_rerror_rate                float64\n",
       "same_srv_rate                  float64\n",
       "diff_srv_rate                  float64\n",
       "srv_diff_host_rate             float64\n",
       "dst_host_count                   int64\n",
       "dst_host_srv_count               int64\n",
       "dst_host_same_srv_rate         float64\n",
       "dst_host_diff_srv_rate         float64\n",
       "dst_host_same_src_port_rate    float64\n",
       "dst_host_srv_diff_host_rate    float64\n",
       "dst_host_serror_rate           float64\n",
       "dst_host_srv_serror_rate       float64\n",
       "dst_host_rerror_rate           float64\n",
       "dst_host_srv_rerror_rate       float64\n",
       "attack                          object\n",
       "last_flag                        int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.dtypes #mentions the datatype of each columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "duration                       0\n",
       "protocol_type                  0\n",
       "service                        0\n",
       "flag                           0\n",
       "src_bytes                      0\n",
       "dst_bytes                      0\n",
       "land                           0\n",
       "wrong_fragment                 0\n",
       "urgent                         0\n",
       "hot                            0\n",
       "num_failed_logins              0\n",
       "logged_in                      0\n",
       "num_compromised                0\n",
       "root_shell                     0\n",
       "su_attempted                   0\n",
       "num_root                       0\n",
       "num_file_creations             0\n",
       "num_shells                     0\n",
       "num_access_files               0\n",
       "num_outbound_cmds              0\n",
       "is_host_login                  0\n",
       "is_guest_login                 0\n",
       "count                          0\n",
       "srv_count                      0\n",
       "serror_rate                    0\n",
       "srv_serror_rate                0\n",
       "rerror_rate                    0\n",
       "srv_rerror_rate                0\n",
       "same_srv_rate                  0\n",
       "diff_srv_rate                  0\n",
       "srv_diff_host_rate             0\n",
       "dst_host_count                 0\n",
       "dst_host_srv_count             0\n",
       "dst_host_same_srv_rate         0\n",
       "dst_host_diff_srv_rate         0\n",
       "dst_host_same_src_port_rate    0\n",
       "dst_host_srv_diff_host_rate    0\n",
       "dst_host_serror_rate           0\n",
       "dst_host_srv_serror_rate       0\n",
       "dst_host_rerror_rate           0\n",
       "dst_host_srv_rerror_rate       0\n",
       "attack                         0\n",
       "last_flag                      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.isnull().sum() #checks if any null value is present "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>4. Dropped all the single valued columns "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropped all the single valued columns\n",
    "df3.drop(['land','root_shell','su_attempted','is_host_login','is_guest_login','duration','wrong_fragment','hot','urgent','num_failed_logins','num_compromised','num_root','num_file_creations','num_shells','num_access_files','num_outbound_cmds'], axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "df3.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate3.csv',index=False) #saving the dataframe as a new csv file"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>5. Outlier detection and Clipping of data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Outliers are extreme values that deviate from other observations on data , they may indicate a variability in a measurement, experimental errors or a novelty. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df4=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate3.csv') #reading the new csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#bf dataframe contains only numerical columns\n",
    "#categorical and singled valued were not included\n",
    "bf=df4[['src_bytes','dst_bytes','count','srv_count','serror_rate','srv_serror_rate','rerror_rate','srv_rerror_rate','same_srv_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_srv_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','dst_host_same_src_port_rate','dst_host_srv_diff_host_rate','dst_host_serror_rate','dst_host_srv_serror_rate','dst_host_rerror_rate','dst_host_srv_rerror_rate']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Quartiles tell us about the spread of a data set by breaking the data set into quarters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#function used to print quartiles from all the above mentioned columns\n",
    "def quar(s):\n",
    "    data = bf[s]\n",
    "    print(data.quantile(0.9))\n",
    "    print(data.quantile(0.95))\n",
    "    print(data.quantile(0.99))\n",
    "    print(data.quantile(1))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "src_bytes\n",
      "884.0\n",
      "1594.1999999999825\n",
      "54540.0\n",
      "1379963888.0\n",
      "\n",
      "\n",
      "\n",
      "dst_bytes\n",
      "3437.399999999994\n",
      "8314.0\n",
      "25598.159999999916\n",
      "1309937401.0\n",
      "\n",
      "\n",
      "\n",
      "count\n",
      "256.0\n",
      "288.0\n",
      "511.0\n",
      "511.0\n",
      "\n",
      "\n",
      "\n",
      "srv_count\n",
      "40.0\n",
      "159.0\n",
      "510.0\n",
      "511.0\n",
      "\n",
      "\n",
      "\n",
      "serror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "srv_serror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "rerror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "srv_rerror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "same_srv_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "diff_srv_rate\n",
      "0.08\n",
      "0.43999999999999995\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "srv_diff_host_rate\n",
      "0.33\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_count\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_srv_count\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_same_srv_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_diff_srv_rate\n",
      "0.11\n",
      "0.6\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_same_src_port_rate\n",
      "0.84\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_srv_diff_host_rate\n",
      "0.05\n",
      "0.16\n",
      "0.52\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_serror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_srv_serror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_rerror_rate\n",
      "0.91\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_srv_rerror_rate\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#for loop used to print quartiles from all the above mentioned columns\n",
    "for x in bf:\n",
    "    print(x)\n",
    "    quar(x)\n",
    "    print('\\n\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Clipping is used to avoid using outliers in the calculations made later on "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n",
      "D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n",
      "D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n",
      "D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  after removing the cwd from sys.path.\n",
      "D:\\Anaconda\\lib\\site-packages\\ipykernel_launcher.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \"\"\"\n"
     ]
    }
   ],
   "source": [
    "bf['src_bytes']=bf['src_bytes'].clip(0,bf['src_bytes'].quantile(0.95))\n",
    "bf['dst_bytes']=bf['dst_bytes'].clip(0,bf['dst_bytes'].quantile(0.95))\n",
    "bf['count']=bf['count'].clip(0,bf['count'].quantile(0.95))\n",
    "bf['srv_count']=bf['srv_count'].clip(0,bf['srv_count'].quantile(0.95))\n",
    "bf['diff_srv_rate']=bf['diff_srv_rate'].clip(0,bf['diff_srv_rate'].quantile(0.95))\n",
    "#bf[\"srv_diff_host_rate\"]=bf[\"srv_diff_host_rate\"].clip(0,bf[\"srv_diff_host_rate\"].quantile(0.90))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>7. Dummification "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "d5=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\newconcate.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(144744, 105)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df6=pd.get_dummies(d5,columns=[\"protocol_type\",\"flag\",\"service\"],drop_first=True)#get_dummies is a function which helps for dummfing the columns\n",
    "df6.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(148517, 105)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df5.shape #checking no of rows and columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df5.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\newconcate1.csv',index=False) #saving df5 dataframe as new "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>8. Replacing All Different Types Of attack To 'attack' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df6=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\newconcate1.csv') #reading a dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# replacing the different attack types with 'attack'\n",
    "df6.replace(to_replace =['neptune','back','buffer_overflow','ftp_write','guess_passwd','imap','ipsweep','land','loadmodule','multihop','neptune','nmap','perl','phf','pod','portsweep','rootkit','satan','smurf','spy','teardrop','warezclient','warezmaster','apache2','httptunnel','mailbomb','named','ps','rootkit','saint','sendmail','snmpgetattack','snmpguess','sqlattack','xlock','xsnoop','xterm','mscan','processtable','worm','udpstorm'],value ='attack',inplace=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0         normal\n",
      "1         normal\n",
      "2         attack\n",
      "3         normal\n",
      "4         normal\n",
      "5         attack\n",
      "6         attack\n",
      "7         attack\n",
      "8         attack\n",
      "9         attack\n",
      "10        attack\n",
      "11        attack\n",
      "12        normal\n",
      "13        attack\n",
      "14        attack\n",
      "15        attack\n",
      "16        normal\n",
      "17        attack\n",
      "18        normal\n",
      "19        normal\n",
      "20        attack\n",
      "21        attack\n",
      "22        normal\n",
      "23        normal\n",
      "24        attack\n",
      "25        normal\n",
      "26        attack\n",
      "27        normal\n",
      "28        normal\n",
      "29        normal\n",
      "           ...  \n",
      "144714    normal\n",
      "144715    normal\n",
      "144716    normal\n",
      "144717    attack\n",
      "144718    normal\n",
      "144719    attack\n",
      "144720    attack\n",
      "144721    normal\n",
      "144722    normal\n",
      "144723    normal\n",
      "144724    attack\n",
      "144725    attack\n",
      "144726    attack\n",
      "144727    normal\n",
      "144728    normal\n",
      "144729    normal\n",
      "144730    attack\n",
      "144731    normal\n",
      "144732    attack\n",
      "144733    attack\n",
      "144734    normal\n",
      "144735    normal\n",
      "144736    attack\n",
      "144737    normal\n",
      "144738    attack\n",
      "144739    attack\n",
      "144740    normal\n",
      "144741    normal\n",
      "144742    attack\n",
      "144743    normal\n",
      "Name: attack, Length: 144744, dtype: object\n"
     ]
    }
   ],
   "source": [
    "# printing the attack column to check if replaced\n",
    "print(df6['attack'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# saving the dataframe as a new csv file \n",
    "df6.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\model\\\\concate3.csv',index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>9. Finding out correlations "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pandas dataframe.corr() is used to find the pairwise correlation of all columns in the dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "data2=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\model\\\\concate3.csv') #reading a csv file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "data2['attack'].replace({'normal':0,'attack':1},inplace=True) #replacing normal as 0 and attack as 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "data2.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concint.csv',index=False) #saving data2 dataframe as new csv file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "data4=data2.corr() #finding out correlations "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>src_bytes</th>\n",
       "      <th>dst_bytes</th>\n",
       "      <th>logged_in</th>\n",
       "      <th>count</th>\n",
       "      <th>srv_count</th>\n",
       "      <th>serror_rate</th>\n",
       "      <th>srv_serror_rate</th>\n",
       "      <th>rerror_rate</th>\n",
       "      <th>srv_rerror_rate</th>\n",
       "      <th>same_srv_rate</th>\n",
       "      <th>...</th>\n",
       "      <th>service_telnet</th>\n",
       "      <th>service_tftp_u</th>\n",
       "      <th>service_tim_i</th>\n",
       "      <th>service_time</th>\n",
       "      <th>service_urh_i</th>\n",
       "      <th>service_urp_i</th>\n",
       "      <th>service_uucp</th>\n",
       "      <th>service_uucp_path</th>\n",
       "      <th>service_vmnet</th>\n",
       "      <th>service_whois</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>src_bytes</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>-0.003328</td>\n",
       "      <td>-0.004837</td>\n",
       "      <td>-0.002612</td>\n",
       "      <td>-0.002759</td>\n",
       "      <td>-0.002965</td>\n",
       "      <td>0.012100</td>\n",
       "      <td>0.012295</td>\n",
       "      <td>0.003620</td>\n",
       "      <td>...</td>\n",
       "      <td>0.002366</td>\n",
       "      <td>-0.000039</td>\n",
       "      <td>-0.000072</td>\n",
       "      <td>-0.000511</td>\n",
       "      <td>-0.000061</td>\n",
       "      <td>-0.000483</td>\n",
       "      <td>-0.000560</td>\n",
       "      <td>-0.000527</td>\n",
       "      <td>-0.000499</td>\n",
       "      <td>-0.000526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_bytes</th>\n",
       "      <td>0.000208</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002701</td>\n",
       "      <td>-0.003316</td>\n",
       "      <td>-0.001638</td>\n",
       "      <td>-0.002713</td>\n",
       "      <td>-0.002695</td>\n",
       "      <td>0.009861</td>\n",
       "      <td>0.009765</td>\n",
       "      <td>0.003523</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000286</td>\n",
       "      <td>-0.000025</td>\n",
       "      <td>-0.000046</td>\n",
       "      <td>-0.000323</td>\n",
       "      <td>-0.000039</td>\n",
       "      <td>-0.000307</td>\n",
       "      <td>-0.000354</td>\n",
       "      <td>-0.000334</td>\n",
       "      <td>-0.000316</td>\n",
       "      <td>-0.000333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>logged_in</th>\n",
       "      <td>-0.003328</td>\n",
       "      <td>-0.002701</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.545110</td>\n",
       "      <td>-0.204404</td>\n",
       "      <td>-0.473045</td>\n",
       "      <td>-0.471223</td>\n",
       "      <td>-0.310469</td>\n",
       "      <td>-0.306819</td>\n",
       "      <td>0.603278</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.028194</td>\n",
       "      <td>-0.004351</td>\n",
       "      <td>-0.008141</td>\n",
       "      <td>-0.056675</td>\n",
       "      <td>-0.006880</td>\n",
       "      <td>-0.054379</td>\n",
       "      <td>-0.062078</td>\n",
       "      <td>-0.059135</td>\n",
       "      <td>-0.056022</td>\n",
       "      <td>-0.059054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>-0.004837</td>\n",
       "      <td>-0.003316</td>\n",
       "      <td>-0.545110</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.495223</td>\n",
       "      <td>0.417218</td>\n",
       "      <td>0.412765</td>\n",
       "      <td>0.211820</td>\n",
       "      <td>0.212115</td>\n",
       "      <td>-0.615514</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.039179</td>\n",
       "      <td>-0.001323</td>\n",
       "      <td>-0.006950</td>\n",
       "      <td>0.059753</td>\n",
       "      <td>-0.005929</td>\n",
       "      <td>-0.041565</td>\n",
       "      <td>0.021951</td>\n",
       "      <td>0.080193</td>\n",
       "      <td>0.076049</td>\n",
       "      <td>0.075991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>srv_count</th>\n",
       "      <td>-0.002612</td>\n",
       "      <td>-0.001638</td>\n",
       "      <td>-0.204404</td>\n",
       "      <td>0.495223</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.139315</td>\n",
       "      <td>-0.138499</td>\n",
       "      <td>-0.115115</td>\n",
       "      <td>-0.115085</td>\n",
       "      <td>0.188291</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.039654</td>\n",
       "      <td>-0.001753</td>\n",
       "      <td>-0.003523</td>\n",
       "      <td>-0.017214</td>\n",
       "      <td>-0.003017</td>\n",
       "      <td>-0.022316</td>\n",
       "      <td>-0.017945</td>\n",
       "      <td>-0.016306</td>\n",
       "      <td>-0.015822</td>\n",
       "      <td>-0.016821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>serror_rate</th>\n",
       "      <td>-0.002759</td>\n",
       "      <td>-0.002713</td>\n",
       "      <td>-0.473045</td>\n",
       "      <td>0.417218</td>\n",
       "      <td>-0.139315</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.992346</td>\n",
       "      <td>-0.222867</td>\n",
       "      <td>-0.221775</td>\n",
       "      <td>-0.725121</td>\n",
       "      <td>...</td>\n",
       "      <td>0.072531</td>\n",
       "      <td>-0.003144</td>\n",
       "      <td>-0.005882</td>\n",
       "      <td>0.064705</td>\n",
       "      <td>-0.004971</td>\n",
       "      <td>-0.039292</td>\n",
       "      <td>0.084377</td>\n",
       "      <td>0.081335</td>\n",
       "      <td>0.077846</td>\n",
       "      <td>0.083587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>srv_serror_rate</th>\n",
       "      <td>-0.002965</td>\n",
       "      <td>-0.002695</td>\n",
       "      <td>-0.471223</td>\n",
       "      <td>0.412765</td>\n",
       "      <td>-0.138499</td>\n",
       "      <td>0.992346</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.221906</td>\n",
       "      <td>-0.230334</td>\n",
       "      <td>-0.720337</td>\n",
       "      <td>...</td>\n",
       "      <td>0.073102</td>\n",
       "      <td>-0.003118</td>\n",
       "      <td>-0.005834</td>\n",
       "      <td>0.064874</td>\n",
       "      <td>-0.004930</td>\n",
       "      <td>-0.038968</td>\n",
       "      <td>0.084457</td>\n",
       "      <td>0.081429</td>\n",
       "      <td>0.077952</td>\n",
       "      <td>0.083827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rerror_rate</th>\n",
       "      <td>0.012100</td>\n",
       "      <td>0.009861</td>\n",
       "      <td>-0.310469</td>\n",
       "      <td>0.211820</td>\n",
       "      <td>-0.115115</td>\n",
       "      <td>-0.222867</td>\n",
       "      <td>-0.221906</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.988384</td>\n",
       "      <td>-0.281214</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012115</td>\n",
       "      <td>-0.002069</td>\n",
       "      <td>-0.003871</td>\n",
       "      <td>0.018278</td>\n",
       "      <td>-0.003272</td>\n",
       "      <td>-0.025860</td>\n",
       "      <td>0.028487</td>\n",
       "      <td>0.024721</td>\n",
       "      <td>0.022657</td>\n",
       "      <td>0.021853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>srv_rerror_rate</th>\n",
       "      <td>0.012295</td>\n",
       "      <td>0.009765</td>\n",
       "      <td>-0.306819</td>\n",
       "      <td>0.212115</td>\n",
       "      <td>-0.115085</td>\n",
       "      <td>-0.221775</td>\n",
       "      <td>-0.230334</td>\n",
       "      <td>0.988384</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.280106</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013078</td>\n",
       "      <td>-0.002065</td>\n",
       "      <td>-0.003863</td>\n",
       "      <td>0.017189</td>\n",
       "      <td>-0.003265</td>\n",
       "      <td>-0.025804</td>\n",
       "      <td>0.027738</td>\n",
       "      <td>0.024350</td>\n",
       "      <td>0.022295</td>\n",
       "      <td>0.021360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>same_srv_rate</th>\n",
       "      <td>0.003620</td>\n",
       "      <td>0.003523</td>\n",
       "      <td>0.603278</td>\n",
       "      <td>-0.615514</td>\n",
       "      <td>0.188291</td>\n",
       "      <td>-0.725121</td>\n",
       "      <td>-0.720337</td>\n",
       "      <td>-0.281214</td>\n",
       "      <td>-0.280106</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010438</td>\n",
       "      <td>-0.007385</td>\n",
       "      <td>0.005461</td>\n",
       "      <td>-0.073940</td>\n",
       "      <td>0.004063</td>\n",
       "      <td>-0.033724</td>\n",
       "      <td>-0.097296</td>\n",
       "      <td>-0.097448</td>\n",
       "      <td>-0.092642</td>\n",
       "      <td>-0.096611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>diff_srv_rate</th>\n",
       "      <td>-0.000466</td>\n",
       "      <td>-0.001594</td>\n",
       "      <td>-0.227321</td>\n",
       "      <td>0.242816</td>\n",
       "      <td>-0.107162</td>\n",
       "      <td>0.046802</td>\n",
       "      <td>0.042059</td>\n",
       "      <td>0.264935</td>\n",
       "      <td>0.269538</td>\n",
       "      <td>-0.388289</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001351</td>\n",
       "      <td>0.003944</td>\n",
       "      <td>-0.000091</td>\n",
       "      <td>0.000624</td>\n",
       "      <td>0.006123</td>\n",
       "      <td>0.137753</td>\n",
       "      <td>0.004396</td>\n",
       "      <td>0.002596</td>\n",
       "      <td>0.001673</td>\n",
       "      <td>0.004057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>srv_diff_host_rate</th>\n",
       "      <td>-0.002427</td>\n",
       "      <td>-0.001543</td>\n",
       "      <td>0.138345</td>\n",
       "      <td>-0.256932</td>\n",
       "      <td>-0.079250</td>\n",
       "      <td>-0.207630</td>\n",
       "      <td>-0.209383</td>\n",
       "      <td>-0.089750</td>\n",
       "      <td>-0.087313</td>\n",
       "      <td>0.269364</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.052942</td>\n",
       "      <td>-0.001950</td>\n",
       "      <td>-0.003649</td>\n",
       "      <td>-0.025678</td>\n",
       "      <td>-0.003084</td>\n",
       "      <td>-0.018755</td>\n",
       "      <td>-0.028160</td>\n",
       "      <td>-0.026506</td>\n",
       "      <td>-0.025111</td>\n",
       "      <td>-0.026470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_count</th>\n",
       "      <td>-0.005613</td>\n",
       "      <td>0.002285</td>\n",
       "      <td>-0.394930</td>\n",
       "      <td>0.457295</td>\n",
       "      <td>0.151300</td>\n",
       "      <td>0.366003</td>\n",
       "      <td>0.364038</td>\n",
       "      <td>0.108605</td>\n",
       "      <td>0.109893</td>\n",
       "      <td>-0.496507</td>\n",
       "      <td>...</td>\n",
       "      <td>0.018278</td>\n",
       "      <td>-0.003756</td>\n",
       "      <td>-0.011454</td>\n",
       "      <td>0.027139</td>\n",
       "      <td>-0.003165</td>\n",
       "      <td>0.038902</td>\n",
       "      <td>0.054857</td>\n",
       "      <td>0.051797</td>\n",
       "      <td>0.048108</td>\n",
       "      <td>0.050199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_srv_count</th>\n",
       "      <td>-0.006618</td>\n",
       "      <td>-0.003996</td>\n",
       "      <td>0.627855</td>\n",
       "      <td>-0.384582</td>\n",
       "      <td>0.208971</td>\n",
       "      <td>-0.537040</td>\n",
       "      <td>-0.534309</td>\n",
       "      <td>-0.293434</td>\n",
       "      <td>-0.291453</td>\n",
       "      <td>0.711035</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.093371</td>\n",
       "      <td>-0.005456</td>\n",
       "      <td>-0.010349</td>\n",
       "      <td>-0.066968</td>\n",
       "      <td>-0.006327</td>\n",
       "      <td>-0.055168</td>\n",
       "      <td>-0.073825</td>\n",
       "      <td>-0.069099</td>\n",
       "      <td>-0.065855</td>\n",
       "      <td>-0.069478</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_same_srv_rate</th>\n",
       "      <td>-0.006254</td>\n",
       "      <td>-0.004196</td>\n",
       "      <td>0.607905</td>\n",
       "      <td>-0.462368</td>\n",
       "      <td>0.187616</td>\n",
       "      <td>-0.599404</td>\n",
       "      <td>-0.595859</td>\n",
       "      <td>-0.308768</td>\n",
       "      <td>-0.306222</td>\n",
       "      <td>0.795451</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.082033</td>\n",
       "      <td>-0.005858</td>\n",
       "      <td>-0.000498</td>\n",
       "      <td>-0.058360</td>\n",
       "      <td>-0.006462</td>\n",
       "      <td>-0.062106</td>\n",
       "      <td>-0.083123</td>\n",
       "      <td>-0.077898</td>\n",
       "      <td>-0.074093</td>\n",
       "      <td>-0.078195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_diff_srv_rate</th>\n",
       "      <td>0.000816</td>\n",
       "      <td>0.010066</td>\n",
       "      <td>-0.259323</td>\n",
       "      <td>0.185922</td>\n",
       "      <td>-0.108168</td>\n",
       "      <td>-0.010006</td>\n",
       "      <td>-0.018438</td>\n",
       "      <td>0.353603</td>\n",
       "      <td>0.355271</td>\n",
       "      <td>-0.191511</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007794</td>\n",
       "      <td>0.002712</td>\n",
       "      <td>-0.002828</td>\n",
       "      <td>-0.000073</td>\n",
       "      <td>0.000725</td>\n",
       "      <td>-0.021514</td>\n",
       "      <td>-0.004330</td>\n",
       "      <td>-0.001658</td>\n",
       "      <td>-0.001206</td>\n",
       "      <td>-0.000206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_same_src_port_rate</th>\n",
       "      <td>0.000570</td>\n",
       "      <td>0.010870</td>\n",
       "      <td>-0.181406</td>\n",
       "      <td>-0.085618</td>\n",
       "      <td>0.209603</td>\n",
       "      <td>-0.255077</td>\n",
       "      <td>-0.254205</td>\n",
       "      <td>-0.002714</td>\n",
       "      <td>-0.004482</td>\n",
       "      <td>0.261534</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.047926</td>\n",
       "      <td>0.000827</td>\n",
       "      <td>0.012726</td>\n",
       "      <td>-0.026978</td>\n",
       "      <td>0.000947</td>\n",
       "      <td>-0.004669</td>\n",
       "      <td>-0.034263</td>\n",
       "      <td>-0.031293</td>\n",
       "      <td>-0.029568</td>\n",
       "      <td>-0.031735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_srv_diff_host_rate</th>\n",
       "      <td>-0.001414</td>\n",
       "      <td>-0.001165</td>\n",
       "      <td>-0.055647</td>\n",
       "      <td>-0.197371</td>\n",
       "      <td>-0.060130</td>\n",
       "      <td>-0.157589</td>\n",
       "      <td>-0.155993</td>\n",
       "      <td>0.011274</td>\n",
       "      <td>0.008991</td>\n",
       "      <td>0.206894</td>\n",
       "      <td>...</td>\n",
       "      <td>0.030347</td>\n",
       "      <td>-0.001482</td>\n",
       "      <td>-0.002773</td>\n",
       "      <td>-0.012218</td>\n",
       "      <td>-0.001966</td>\n",
       "      <td>-0.015960</td>\n",
       "      <td>-0.021401</td>\n",
       "      <td>-0.020145</td>\n",
       "      <td>-0.019084</td>\n",
       "      <td>-0.017462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_serror_rate</th>\n",
       "      <td>-0.003988</td>\n",
       "      <td>-0.002686</td>\n",
       "      <td>-0.472008</td>\n",
       "      <td>0.418129</td>\n",
       "      <td>-0.137546</td>\n",
       "      <td>0.979517</td>\n",
       "      <td>0.976527</td>\n",
       "      <td>-0.221855</td>\n",
       "      <td>-0.221207</td>\n",
       "      <td>-0.723844</td>\n",
       "      <td>...</td>\n",
       "      <td>0.080740</td>\n",
       "      <td>-0.003158</td>\n",
       "      <td>-0.005909</td>\n",
       "      <td>0.063486</td>\n",
       "      <td>-0.004994</td>\n",
       "      <td>-0.039453</td>\n",
       "      <td>0.084704</td>\n",
       "      <td>0.081660</td>\n",
       "      <td>0.078095</td>\n",
       "      <td>0.083834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_srv_serror_rate</th>\n",
       "      <td>-0.002931</td>\n",
       "      <td>-0.002609</td>\n",
       "      <td>-0.474094</td>\n",
       "      <td>0.420848</td>\n",
       "      <td>-0.136463</td>\n",
       "      <td>0.980611</td>\n",
       "      <td>0.986711</td>\n",
       "      <td>-0.219230</td>\n",
       "      <td>-0.226876</td>\n",
       "      <td>-0.728468</td>\n",
       "      <td>...</td>\n",
       "      <td>0.080539</td>\n",
       "      <td>-0.003085</td>\n",
       "      <td>-0.005772</td>\n",
       "      <td>0.064275</td>\n",
       "      <td>-0.004878</td>\n",
       "      <td>-0.038554</td>\n",
       "      <td>0.085381</td>\n",
       "      <td>0.082306</td>\n",
       "      <td>0.078786</td>\n",
       "      <td>0.084711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_rerror_rate</th>\n",
       "      <td>-0.001636</td>\n",
       "      <td>0.010260</td>\n",
       "      <td>-0.297377</td>\n",
       "      <td>0.226650</td>\n",
       "      <td>-0.104901</td>\n",
       "      <td>-0.227845</td>\n",
       "      <td>-0.229363</td>\n",
       "      <td>0.932235</td>\n",
       "      <td>0.922499</td>\n",
       "      <td>-0.285745</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.020732</td>\n",
       "      <td>-0.000877</td>\n",
       "      <td>-0.003778</td>\n",
       "      <td>0.019676</td>\n",
       "      <td>-0.003397</td>\n",
       "      <td>-0.026768</td>\n",
       "      <td>0.029006</td>\n",
       "      <td>0.025385</td>\n",
       "      <td>0.023155</td>\n",
       "      <td>0.020404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dst_host_srv_rerror_rate</th>\n",
       "      <td>0.010900</td>\n",
       "      <td>0.009905</td>\n",
       "      <td>-0.298373</td>\n",
       "      <td>0.217048</td>\n",
       "      <td>-0.114330</td>\n",
       "      <td>-0.221188</td>\n",
       "      <td>-0.229064</td>\n",
       "      <td>0.966852</td>\n",
       "      <td>0.974018</td>\n",
       "      <td>-0.284972</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.014766</td>\n",
       "      <td>-0.002074</td>\n",
       "      <td>-0.003880</td>\n",
       "      <td>0.018060</td>\n",
       "      <td>-0.003279</td>\n",
       "      <td>-0.025918</td>\n",
       "      <td>0.028283</td>\n",
       "      <td>0.024843</td>\n",
       "      <td>0.022753</td>\n",
       "      <td>0.021817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>attack</th>\n",
       "      <td>0.005572</td>\n",
       "      <td>0.003758</td>\n",
       "      <td>-0.673101</td>\n",
       "      <td>0.550108</td>\n",
       "      <td>-0.009557</td>\n",
       "      <td>0.608217</td>\n",
       "      <td>0.605949</td>\n",
       "      <td>0.292726</td>\n",
       "      <td>0.291841</td>\n",
       "      <td>-0.735621</td>\n",
       "      <td>...</td>\n",
       "      <td>0.058872</td>\n",
       "      <td>-0.004927</td>\n",
       "      <td>0.002046</td>\n",
       "      <td>0.057558</td>\n",
       "      <td>-0.007791</td>\n",
       "      <td>-0.060515</td>\n",
       "      <td>0.080977</td>\n",
       "      <td>0.076223</td>\n",
       "      <td>0.072210</td>\n",
       "      <td>0.076118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>last_flag</th>\n",
       "      <td>-0.019061</td>\n",
       "      <td>-0.015086</td>\n",
       "      <td>0.235555</td>\n",
       "      <td>-0.009282</td>\n",
       "      <td>-0.102646</td>\n",
       "      <td>0.032834</td>\n",
       "      <td>0.036131</td>\n",
       "      <td>-0.061151</td>\n",
       "      <td>-0.060071</td>\n",
       "      <td>-0.040922</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.149584</td>\n",
       "      <td>-0.020046</td>\n",
       "      <td>-0.033485</td>\n",
       "      <td>-0.018523</td>\n",
       "      <td>0.004210</td>\n",
       "      <td>-0.012743</td>\n",
       "      <td>-0.009100</td>\n",
       "      <td>-0.006321</td>\n",
       "      <td>-0.010261</td>\n",
       "      <td>-0.008256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>protocol_type_tcp</th>\n",
       "      <td>0.003459</td>\n",
       "      <td>0.002196</td>\n",
       "      <td>0.390212</td>\n",
       "      <td>-0.082123</td>\n",
       "      <td>-0.535205</td>\n",
       "      <td>0.278915</td>\n",
       "      <td>0.279625</td>\n",
       "      <td>0.185270</td>\n",
       "      <td>0.185165</td>\n",
       "      <td>-0.250490</td>\n",
       "      <td>...</td>\n",
       "      <td>0.067761</td>\n",
       "      <td>-0.011151</td>\n",
       "      <td>-0.020863</td>\n",
       "      <td>0.032626</td>\n",
       "      <td>-0.017632</td>\n",
       "      <td>-0.139356</td>\n",
       "      <td>0.035779</td>\n",
       "      <td>0.033678</td>\n",
       "      <td>0.031906</td>\n",
       "      <td>0.033632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>protocol_type_udp</th>\n",
       "      <td>-0.002694</td>\n",
       "      <td>-0.001702</td>\n",
       "      <td>-0.302817</td>\n",
       "      <td>0.020369</td>\n",
       "      <td>0.350665</td>\n",
       "      <td>-0.215295</td>\n",
       "      <td>-0.216998</td>\n",
       "      <td>-0.143743</td>\n",
       "      <td>-0.143693</td>\n",
       "      <td>0.174223</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.052584</td>\n",
       "      <td>0.014370</td>\n",
       "      <td>-0.003598</td>\n",
       "      <td>-0.025319</td>\n",
       "      <td>-0.003041</td>\n",
       "      <td>-0.024033</td>\n",
       "      <td>-0.027766</td>\n",
       "      <td>-0.026135</td>\n",
       "      <td>-0.024760</td>\n",
       "      <td>-0.026100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flag_REJ</th>\n",
       "      <td>-0.002458</td>\n",
       "      <td>-0.001556</td>\n",
       "      <td>-0.275816</td>\n",
       "      <td>0.245891</td>\n",
       "      <td>-0.095135</td>\n",
       "      <td>-0.187157</td>\n",
       "      <td>-0.195808</td>\n",
       "      <td>0.846521</td>\n",
       "      <td>0.853516</td>\n",
       "      <td>-0.300835</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.047896</td>\n",
       "      <td>-0.001752</td>\n",
       "      <td>-0.003277</td>\n",
       "      <td>-0.023061</td>\n",
       "      <td>-0.002770</td>\n",
       "      <td>-0.021890</td>\n",
       "      <td>-0.024679</td>\n",
       "      <td>0.032911</td>\n",
       "      <td>0.030104</td>\n",
       "      <td>0.028801</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flag_RSTO</th>\n",
       "      <td>0.006688</td>\n",
       "      <td>-0.000536</td>\n",
       "      <td>-0.080358</td>\n",
       "      <td>0.067436</td>\n",
       "      <td>-0.030869</td>\n",
       "      <td>-0.069642</td>\n",
       "      <td>-0.069492</td>\n",
       "      <td>0.299929</td>\n",
       "      <td>0.296741</td>\n",
       "      <td>-0.119676</td>\n",
       "      <td>...</td>\n",
       "      <td>0.095316</td>\n",
       "      <td>-0.000618</td>\n",
       "      <td>-0.001155</td>\n",
       "      <td>0.113931</td>\n",
       "      <td>-0.000976</td>\n",
       "      <td>-0.007717</td>\n",
       "      <td>0.153857</td>\n",
       "      <td>-0.008392</td>\n",
       "      <td>-0.007950</td>\n",
       "      <td>-0.008380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flag_RSTOS0</th>\n",
       "      <td>0.176353</td>\n",
       "      <td>-0.000126</td>\n",
       "      <td>-0.022302</td>\n",
       "      <td>0.009336</td>\n",
       "      <td>-0.009371</td>\n",
       "      <td>0.018626</td>\n",
       "      <td>0.013434</td>\n",
       "      <td>0.025130</td>\n",
       "      <td>0.031637</td>\n",
       "      <td>-0.033088</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000229</td>\n",
       "      <td>-0.000142</td>\n",
       "      <td>-0.000265</td>\n",
       "      <td>0.005586</td>\n",
       "      <td>-0.000224</td>\n",
       "      <td>-0.001770</td>\n",
       "      <td>-0.002045</td>\n",
       "      <td>-0.001925</td>\n",
       "      <td>-0.001824</td>\n",
       "      <td>0.001693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>flag_RSTR</th>\n",
       "      <td>-0.000592</td>\n",
       "      <td>0.028641</td>\n",
       "      <td>-0.088756</td>\n",
       "      <td>-0.080126</td>\n",
       "      <td>-0.048007</td>\n",
       "      <td>-0.080923</td>\n",
       "      <td>-0.080285</td>\n",
       "      <td>0.337299</td>\n",
       "      <td>0.338590</td>\n",
       "      <td>0.079962</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008383</td>\n",
       "      <td>-0.000712</td>\n",
       "      <td>-0.001331</td>\n",
       "      <td>-0.004840</td>\n",
       "      <td>-0.001125</td>\n",
       "      <td>-0.008892</td>\n",
       "      <td>-0.008206</td>\n",
       "      <td>-0.005282</td>\n",
       "      <td>-0.004532</td>\n",
       "      <td>-0.003798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_netstat</th>\n",
       "      <td>-0.000381</td>\n",
       "      <td>-0.000242</td>\n",
       "      <td>-0.042803</td>\n",
       "      <td>0.049744</td>\n",
       "      <td>-0.012372</td>\n",
       "      <td>0.065016</td>\n",
       "      <td>0.065135</td>\n",
       "      <td>0.010036</td>\n",
       "      <td>0.009820</td>\n",
       "      <td>-0.069411</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007433</td>\n",
       "      <td>-0.000272</td>\n",
       "      <td>-0.000509</td>\n",
       "      <td>-0.003579</td>\n",
       "      <td>-0.000430</td>\n",
       "      <td>-0.003397</td>\n",
       "      <td>-0.003925</td>\n",
       "      <td>-0.003694</td>\n",
       "      <td>-0.003500</td>\n",
       "      <td>-0.003689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_nnsp</th>\n",
       "      <td>-0.000504</td>\n",
       "      <td>-0.000319</td>\n",
       "      <td>-0.056532</td>\n",
       "      <td>0.020497</td>\n",
       "      <td>-0.016143</td>\n",
       "      <td>0.079100</td>\n",
       "      <td>0.079256</td>\n",
       "      <td>0.022158</td>\n",
       "      <td>0.021729</td>\n",
       "      <td>-0.087712</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009817</td>\n",
       "      <td>-0.000359</td>\n",
       "      <td>-0.000672</td>\n",
       "      <td>-0.004727</td>\n",
       "      <td>-0.000568</td>\n",
       "      <td>-0.004487</td>\n",
       "      <td>-0.005183</td>\n",
       "      <td>-0.004879</td>\n",
       "      <td>-0.004622</td>\n",
       "      <td>-0.004872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_nntp</th>\n",
       "      <td>-0.000345</td>\n",
       "      <td>-0.000218</td>\n",
       "      <td>-0.037211</td>\n",
       "      <td>0.040771</td>\n",
       "      <td>-0.010963</td>\n",
       "      <td>0.060521</td>\n",
       "      <td>0.060559</td>\n",
       "      <td>0.004872</td>\n",
       "      <td>0.003676</td>\n",
       "      <td>-0.060822</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006723</td>\n",
       "      <td>-0.000246</td>\n",
       "      <td>-0.000460</td>\n",
       "      <td>-0.003237</td>\n",
       "      <td>-0.000389</td>\n",
       "      <td>-0.003073</td>\n",
       "      <td>-0.003550</td>\n",
       "      <td>-0.003342</td>\n",
       "      <td>-0.003166</td>\n",
       "      <td>-0.003337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_ntp_u</th>\n",
       "      <td>-0.000259</td>\n",
       "      <td>-0.000163</td>\n",
       "      <td>-0.029045</td>\n",
       "      <td>-0.024637</td>\n",
       "      <td>-0.012717</td>\n",
       "      <td>-0.020987</td>\n",
       "      <td>-0.020814</td>\n",
       "      <td>-0.013812</td>\n",
       "      <td>-0.013783</td>\n",
       "      <td>0.013658</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005044</td>\n",
       "      <td>-0.000184</td>\n",
       "      <td>-0.000345</td>\n",
       "      <td>-0.002429</td>\n",
       "      <td>-0.000292</td>\n",
       "      <td>-0.002305</td>\n",
       "      <td>-0.002663</td>\n",
       "      <td>-0.002507</td>\n",
       "      <td>-0.002375</td>\n",
       "      <td>-0.002503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_other</th>\n",
       "      <td>-0.001018</td>\n",
       "      <td>0.012448</td>\n",
       "      <td>-0.135194</td>\n",
       "      <td>0.121781</td>\n",
       "      <td>-0.011307</td>\n",
       "      <td>-0.091425</td>\n",
       "      <td>-0.096070</td>\n",
       "      <td>0.124248</td>\n",
       "      <td>0.129032</td>\n",
       "      <td>-0.065208</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.026943</td>\n",
       "      <td>-0.000985</td>\n",
       "      <td>-0.001844</td>\n",
       "      <td>-0.012973</td>\n",
       "      <td>-0.001558</td>\n",
       "      <td>-0.012314</td>\n",
       "      <td>-0.014226</td>\n",
       "      <td>-0.013391</td>\n",
       "      <td>-0.012686</td>\n",
       "      <td>-0.013373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_pm_dump</th>\n",
       "      <td>-0.000043</td>\n",
       "      <td>-0.000027</td>\n",
       "      <td>-0.004865</td>\n",
       "      <td>0.002108</td>\n",
       "      <td>-0.002133</td>\n",
       "      <td>-0.003298</td>\n",
       "      <td>-0.003486</td>\n",
       "      <td>0.006167</td>\n",
       "      <td>-0.002309</td>\n",
       "      <td>-0.006602</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000845</td>\n",
       "      <td>-0.000031</td>\n",
       "      <td>-0.000058</td>\n",
       "      <td>-0.000407</td>\n",
       "      <td>-0.000049</td>\n",
       "      <td>-0.000386</td>\n",
       "      <td>-0.000446</td>\n",
       "      <td>-0.000420</td>\n",
       "      <td>-0.000398</td>\n",
       "      <td>-0.000419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_pop_2</th>\n",
       "      <td>-0.000185</td>\n",
       "      <td>-0.000117</td>\n",
       "      <td>-0.020200</td>\n",
       "      <td>0.030484</td>\n",
       "      <td>-0.006007</td>\n",
       "      <td>0.018836</td>\n",
       "      <td>0.018769</td>\n",
       "      <td>0.020591</td>\n",
       "      <td>0.019708</td>\n",
       "      <td>-0.032147</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003605</td>\n",
       "      <td>-0.000132</td>\n",
       "      <td>-0.000247</td>\n",
       "      <td>-0.001736</td>\n",
       "      <td>-0.000208</td>\n",
       "      <td>-0.001648</td>\n",
       "      <td>-0.001904</td>\n",
       "      <td>-0.001792</td>\n",
       "      <td>-0.001698</td>\n",
       "      <td>-0.001789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_pop_3</th>\n",
       "      <td>-0.000624</td>\n",
       "      <td>-0.000378</td>\n",
       "      <td>0.087942</td>\n",
       "      <td>-0.048076</td>\n",
       "      <td>-0.029985</td>\n",
       "      <td>-0.040190</td>\n",
       "      <td>-0.039833</td>\n",
       "      <td>-0.023569</td>\n",
       "      <td>-0.025192</td>\n",
       "      <td>0.042731</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.012175</td>\n",
       "      <td>-0.000445</td>\n",
       "      <td>-0.000833</td>\n",
       "      <td>-0.005862</td>\n",
       "      <td>-0.000704</td>\n",
       "      <td>-0.005564</td>\n",
       "      <td>-0.006428</td>\n",
       "      <td>-0.006051</td>\n",
       "      <td>-0.005733</td>\n",
       "      <td>-0.006043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_printer</th>\n",
       "      <td>-0.000173</td>\n",
       "      <td>-0.000110</td>\n",
       "      <td>-0.018867</td>\n",
       "      <td>0.006851</td>\n",
       "      <td>-0.005707</td>\n",
       "      <td>0.022931</td>\n",
       "      <td>0.023289</td>\n",
       "      <td>0.013134</td>\n",
       "      <td>0.010905</td>\n",
       "      <td>-0.028243</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003380</td>\n",
       "      <td>-0.000124</td>\n",
       "      <td>-0.000231</td>\n",
       "      <td>-0.001628</td>\n",
       "      <td>-0.000195</td>\n",
       "      <td>-0.001545</td>\n",
       "      <td>-0.001785</td>\n",
       "      <td>-0.001680</td>\n",
       "      <td>-0.001592</td>\n",
       "      <td>-0.001678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_private</th>\n",
       "      <td>0.000377</td>\n",
       "      <td>0.001653</td>\n",
       "      <td>-0.387680</td>\n",
       "      <td>0.228993</td>\n",
       "      <td>-0.063408</td>\n",
       "      <td>0.305834</td>\n",
       "      <td>0.303812</td>\n",
       "      <td>0.225363</td>\n",
       "      <td>0.225929</td>\n",
       "      <td>-0.433659</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.067359</td>\n",
       "      <td>-0.002464</td>\n",
       "      <td>-0.004609</td>\n",
       "      <td>-0.032433</td>\n",
       "      <td>-0.003895</td>\n",
       "      <td>-0.030786</td>\n",
       "      <td>-0.035567</td>\n",
       "      <td>-0.033479</td>\n",
       "      <td>-0.031717</td>\n",
       "      <td>-0.033433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_red_i</th>\n",
       "      <td>-0.000055</td>\n",
       "      <td>-0.000035</td>\n",
       "      <td>-0.006154</td>\n",
       "      <td>-0.005044</td>\n",
       "      <td>-0.002271</td>\n",
       "      <td>-0.004447</td>\n",
       "      <td>-0.004410</td>\n",
       "      <td>-0.002926</td>\n",
       "      <td>-0.002920</td>\n",
       "      <td>0.005617</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001069</td>\n",
       "      <td>-0.000039</td>\n",
       "      <td>-0.000073</td>\n",
       "      <td>-0.000515</td>\n",
       "      <td>-0.000062</td>\n",
       "      <td>-0.000488</td>\n",
       "      <td>-0.000564</td>\n",
       "      <td>-0.000531</td>\n",
       "      <td>-0.000503</td>\n",
       "      <td>-0.000530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_remote_job</th>\n",
       "      <td>-0.000186</td>\n",
       "      <td>-0.000118</td>\n",
       "      <td>-0.020875</td>\n",
       "      <td>0.023178</td>\n",
       "      <td>-0.006800</td>\n",
       "      <td>0.017525</td>\n",
       "      <td>0.018927</td>\n",
       "      <td>0.023280</td>\n",
       "      <td>0.021396</td>\n",
       "      <td>-0.029146</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003625</td>\n",
       "      <td>-0.000133</td>\n",
       "      <td>-0.000248</td>\n",
       "      <td>-0.001745</td>\n",
       "      <td>-0.000210</td>\n",
       "      <td>-0.001657</td>\n",
       "      <td>-0.001914</td>\n",
       "      <td>-0.001802</td>\n",
       "      <td>-0.001707</td>\n",
       "      <td>-0.001799</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_rje</th>\n",
       "      <td>-0.000188</td>\n",
       "      <td>-0.000119</td>\n",
       "      <td>-0.021101</td>\n",
       "      <td>0.020041</td>\n",
       "      <td>-0.006287</td>\n",
       "      <td>0.020355</td>\n",
       "      <td>0.020484</td>\n",
       "      <td>0.020119</td>\n",
       "      <td>0.019880</td>\n",
       "      <td>-0.027349</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003664</td>\n",
       "      <td>-0.000134</td>\n",
       "      <td>-0.000251</td>\n",
       "      <td>-0.001764</td>\n",
       "      <td>-0.000212</td>\n",
       "      <td>-0.001675</td>\n",
       "      <td>-0.001935</td>\n",
       "      <td>-0.001821</td>\n",
       "      <td>-0.001725</td>\n",
       "      <td>-0.001819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_shell</th>\n",
       "      <td>-0.000155</td>\n",
       "      <td>-0.000111</td>\n",
       "      <td>-0.018397</td>\n",
       "      <td>0.006462</td>\n",
       "      <td>-0.005851</td>\n",
       "      <td>0.021394</td>\n",
       "      <td>0.020953</td>\n",
       "      <td>0.013157</td>\n",
       "      <td>0.009417</td>\n",
       "      <td>-0.026315</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003401</td>\n",
       "      <td>-0.000124</td>\n",
       "      <td>-0.000233</td>\n",
       "      <td>-0.001638</td>\n",
       "      <td>-0.000197</td>\n",
       "      <td>-0.001555</td>\n",
       "      <td>-0.001796</td>\n",
       "      <td>-0.001690</td>\n",
       "      <td>-0.001602</td>\n",
       "      <td>-0.001688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_smtp</th>\n",
       "      <td>-0.000462</td>\n",
       "      <td>-0.001103</td>\n",
       "      <td>0.266423</td>\n",
       "      <td>-0.162378</td>\n",
       "      <td>-0.084570</td>\n",
       "      <td>-0.121348</td>\n",
       "      <td>-0.122165</td>\n",
       "      <td>-0.084134</td>\n",
       "      <td>-0.085222</td>\n",
       "      <td>0.157249</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.034645</td>\n",
       "      <td>-0.001267</td>\n",
       "      <td>-0.002371</td>\n",
       "      <td>-0.016681</td>\n",
       "      <td>-0.002003</td>\n",
       "      <td>-0.015834</td>\n",
       "      <td>-0.018293</td>\n",
       "      <td>-0.017219</td>\n",
       "      <td>-0.016313</td>\n",
       "      <td>-0.017196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_sql_net</th>\n",
       "      <td>-0.000315</td>\n",
       "      <td>-0.000199</td>\n",
       "      <td>-0.035316</td>\n",
       "      <td>0.032076</td>\n",
       "      <td>-0.009652</td>\n",
       "      <td>0.043423</td>\n",
       "      <td>0.043445</td>\n",
       "      <td>0.020773</td>\n",
       "      <td>0.020938</td>\n",
       "      <td>-0.053960</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006133</td>\n",
       "      <td>-0.000224</td>\n",
       "      <td>-0.000420</td>\n",
       "      <td>-0.002953</td>\n",
       "      <td>-0.000355</td>\n",
       "      <td>-0.002803</td>\n",
       "      <td>-0.003238</td>\n",
       "      <td>-0.003048</td>\n",
       "      <td>-0.002888</td>\n",
       "      <td>-0.003044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_ssh</th>\n",
       "      <td>-0.000356</td>\n",
       "      <td>-0.000224</td>\n",
       "      <td>-0.035609</td>\n",
       "      <td>0.040900</td>\n",
       "      <td>-0.010817</td>\n",
       "      <td>0.052941</td>\n",
       "      <td>0.053064</td>\n",
       "      <td>0.016512</td>\n",
       "      <td>0.016257</td>\n",
       "      <td>-0.057770</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006944</td>\n",
       "      <td>-0.000254</td>\n",
       "      <td>-0.000475</td>\n",
       "      <td>-0.003343</td>\n",
       "      <td>-0.000402</td>\n",
       "      <td>-0.003174</td>\n",
       "      <td>-0.003666</td>\n",
       "      <td>-0.003451</td>\n",
       "      <td>-0.003270</td>\n",
       "      <td>-0.003446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_sunrpc</th>\n",
       "      <td>-0.000392</td>\n",
       "      <td>-0.000248</td>\n",
       "      <td>-0.044009</td>\n",
       "      <td>0.054587</td>\n",
       "      <td>-0.011746</td>\n",
       "      <td>0.060263</td>\n",
       "      <td>0.060308</td>\n",
       "      <td>0.018560</td>\n",
       "      <td>0.017161</td>\n",
       "      <td>-0.069969</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.007642</td>\n",
       "      <td>-0.000279</td>\n",
       "      <td>-0.000523</td>\n",
       "      <td>-0.003680</td>\n",
       "      <td>-0.000442</td>\n",
       "      <td>-0.003493</td>\n",
       "      <td>-0.004035</td>\n",
       "      <td>-0.003798</td>\n",
       "      <td>-0.003598</td>\n",
       "      <td>-0.003793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_supdup</th>\n",
       "      <td>-0.000464</td>\n",
       "      <td>-0.000294</td>\n",
       "      <td>-0.052092</td>\n",
       "      <td>0.061613</td>\n",
       "      <td>-0.014154</td>\n",
       "      <td>0.077298</td>\n",
       "      <td>0.077669</td>\n",
       "      <td>0.014623</td>\n",
       "      <td>0.014025</td>\n",
       "      <td>-0.084427</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009046</td>\n",
       "      <td>-0.000331</td>\n",
       "      <td>-0.000619</td>\n",
       "      <td>-0.004355</td>\n",
       "      <td>-0.000523</td>\n",
       "      <td>-0.004134</td>\n",
       "      <td>-0.004776</td>\n",
       "      <td>-0.004496</td>\n",
       "      <td>-0.004259</td>\n",
       "      <td>-0.004490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_systat</th>\n",
       "      <td>-0.000438</td>\n",
       "      <td>-0.000277</td>\n",
       "      <td>-0.049172</td>\n",
       "      <td>0.064442</td>\n",
       "      <td>-0.013716</td>\n",
       "      <td>0.069403</td>\n",
       "      <td>0.069468</td>\n",
       "      <td>0.018452</td>\n",
       "      <td>0.018215</td>\n",
       "      <td>-0.080931</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008539</td>\n",
       "      <td>-0.000312</td>\n",
       "      <td>-0.000584</td>\n",
       "      <td>-0.004111</td>\n",
       "      <td>-0.000494</td>\n",
       "      <td>-0.003903</td>\n",
       "      <td>-0.004509</td>\n",
       "      <td>-0.004244</td>\n",
       "      <td>-0.004021</td>\n",
       "      <td>-0.004238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_telnet</th>\n",
       "      <td>0.002366</td>\n",
       "      <td>0.000286</td>\n",
       "      <td>-0.028194</td>\n",
       "      <td>-0.039179</td>\n",
       "      <td>-0.039654</td>\n",
       "      <td>0.072531</td>\n",
       "      <td>0.073102</td>\n",
       "      <td>-0.012115</td>\n",
       "      <td>-0.013078</td>\n",
       "      <td>-0.010438</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000756</td>\n",
       "      <td>-0.001414</td>\n",
       "      <td>-0.009948</td>\n",
       "      <td>-0.001195</td>\n",
       "      <td>-0.009443</td>\n",
       "      <td>-0.010909</td>\n",
       "      <td>-0.010269</td>\n",
       "      <td>-0.009728</td>\n",
       "      <td>-0.010255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_tftp_u</th>\n",
       "      <td>-0.000039</td>\n",
       "      <td>-0.000025</td>\n",
       "      <td>-0.004351</td>\n",
       "      <td>-0.001323</td>\n",
       "      <td>-0.001753</td>\n",
       "      <td>-0.003144</td>\n",
       "      <td>-0.003118</td>\n",
       "      <td>-0.002069</td>\n",
       "      <td>-0.002065</td>\n",
       "      <td>-0.007385</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000756</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000052</td>\n",
       "      <td>-0.000364</td>\n",
       "      <td>-0.000044</td>\n",
       "      <td>-0.000345</td>\n",
       "      <td>-0.000399</td>\n",
       "      <td>-0.000376</td>\n",
       "      <td>-0.000356</td>\n",
       "      <td>-0.000375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_tim_i</th>\n",
       "      <td>-0.000072</td>\n",
       "      <td>-0.000046</td>\n",
       "      <td>-0.008141</td>\n",
       "      <td>-0.006950</td>\n",
       "      <td>-0.003523</td>\n",
       "      <td>-0.005882</td>\n",
       "      <td>-0.005834</td>\n",
       "      <td>-0.003871</td>\n",
       "      <td>-0.003863</td>\n",
       "      <td>0.005461</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001414</td>\n",
       "      <td>-0.000052</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000681</td>\n",
       "      <td>-0.000082</td>\n",
       "      <td>-0.000646</td>\n",
       "      <td>-0.000746</td>\n",
       "      <td>-0.000703</td>\n",
       "      <td>-0.000666</td>\n",
       "      <td>-0.000702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_time</th>\n",
       "      <td>-0.000511</td>\n",
       "      <td>-0.000323</td>\n",
       "      <td>-0.056675</td>\n",
       "      <td>0.059753</td>\n",
       "      <td>-0.017214</td>\n",
       "      <td>0.064705</td>\n",
       "      <td>0.064874</td>\n",
       "      <td>0.018278</td>\n",
       "      <td>0.017189</td>\n",
       "      <td>-0.073940</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009948</td>\n",
       "      <td>-0.000364</td>\n",
       "      <td>-0.000681</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000575</td>\n",
       "      <td>-0.004547</td>\n",
       "      <td>-0.005253</td>\n",
       "      <td>-0.004944</td>\n",
       "      <td>-0.004684</td>\n",
       "      <td>-0.004938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_urh_i</th>\n",
       "      <td>-0.000061</td>\n",
       "      <td>-0.000039</td>\n",
       "      <td>-0.006880</td>\n",
       "      <td>-0.005929</td>\n",
       "      <td>-0.003017</td>\n",
       "      <td>-0.004971</td>\n",
       "      <td>-0.004930</td>\n",
       "      <td>-0.003272</td>\n",
       "      <td>-0.003265</td>\n",
       "      <td>0.004063</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.001195</td>\n",
       "      <td>-0.000044</td>\n",
       "      <td>-0.000082</td>\n",
       "      <td>-0.000575</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000546</td>\n",
       "      <td>-0.000631</td>\n",
       "      <td>-0.000594</td>\n",
       "      <td>-0.000563</td>\n",
       "      <td>-0.000593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_urp_i</th>\n",
       "      <td>-0.000483</td>\n",
       "      <td>-0.000307</td>\n",
       "      <td>-0.054379</td>\n",
       "      <td>-0.041565</td>\n",
       "      <td>-0.022316</td>\n",
       "      <td>-0.039292</td>\n",
       "      <td>-0.038968</td>\n",
       "      <td>-0.025860</td>\n",
       "      <td>-0.025804</td>\n",
       "      <td>-0.033724</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009443</td>\n",
       "      <td>-0.000345</td>\n",
       "      <td>-0.000646</td>\n",
       "      <td>-0.004547</td>\n",
       "      <td>-0.000546</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.004986</td>\n",
       "      <td>-0.004693</td>\n",
       "      <td>-0.004446</td>\n",
       "      <td>-0.004687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_uucp</th>\n",
       "      <td>-0.000560</td>\n",
       "      <td>-0.000354</td>\n",
       "      <td>-0.062078</td>\n",
       "      <td>0.021951</td>\n",
       "      <td>-0.017945</td>\n",
       "      <td>0.084377</td>\n",
       "      <td>0.084457</td>\n",
       "      <td>0.028487</td>\n",
       "      <td>0.027738</td>\n",
       "      <td>-0.097296</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010909</td>\n",
       "      <td>-0.000399</td>\n",
       "      <td>-0.000746</td>\n",
       "      <td>-0.005253</td>\n",
       "      <td>-0.000631</td>\n",
       "      <td>-0.004986</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005422</td>\n",
       "      <td>-0.005137</td>\n",
       "      <td>-0.005415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_uucp_path</th>\n",
       "      <td>-0.000527</td>\n",
       "      <td>-0.000334</td>\n",
       "      <td>-0.059135</td>\n",
       "      <td>0.080193</td>\n",
       "      <td>-0.016306</td>\n",
       "      <td>0.081335</td>\n",
       "      <td>0.081429</td>\n",
       "      <td>0.024721</td>\n",
       "      <td>0.024350</td>\n",
       "      <td>-0.097448</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010269</td>\n",
       "      <td>-0.000376</td>\n",
       "      <td>-0.000703</td>\n",
       "      <td>-0.004944</td>\n",
       "      <td>-0.000594</td>\n",
       "      <td>-0.004693</td>\n",
       "      <td>-0.005422</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.004835</td>\n",
       "      <td>-0.005097</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_vmnet</th>\n",
       "      <td>-0.000499</td>\n",
       "      <td>-0.000316</td>\n",
       "      <td>-0.056022</td>\n",
       "      <td>0.076049</td>\n",
       "      <td>-0.015822</td>\n",
       "      <td>0.077846</td>\n",
       "      <td>0.077952</td>\n",
       "      <td>0.022657</td>\n",
       "      <td>0.022295</td>\n",
       "      <td>-0.092642</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009728</td>\n",
       "      <td>-0.000356</td>\n",
       "      <td>-0.000666</td>\n",
       "      <td>-0.004684</td>\n",
       "      <td>-0.000563</td>\n",
       "      <td>-0.004446</td>\n",
       "      <td>-0.005137</td>\n",
       "      <td>-0.004835</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.004829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>service_whois</th>\n",
       "      <td>-0.000526</td>\n",
       "      <td>-0.000333</td>\n",
       "      <td>-0.059054</td>\n",
       "      <td>0.075991</td>\n",
       "      <td>-0.016821</td>\n",
       "      <td>0.083587</td>\n",
       "      <td>0.083827</td>\n",
       "      <td>0.021853</td>\n",
       "      <td>0.021360</td>\n",
       "      <td>-0.096611</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010255</td>\n",
       "      <td>-0.000375</td>\n",
       "      <td>-0.000702</td>\n",
       "      <td>-0.004938</td>\n",
       "      <td>-0.000593</td>\n",
       "      <td>-0.004687</td>\n",
       "      <td>-0.005415</td>\n",
       "      <td>-0.005097</td>\n",
       "      <td>-0.004829</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>105 rows × 105 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             src_bytes  dst_bytes  logged_in     count  \\\n",
       "src_bytes                     1.000000   0.000208  -0.003328 -0.004837   \n",
       "dst_bytes                     0.000208   1.000000  -0.002701 -0.003316   \n",
       "logged_in                    -0.003328  -0.002701   1.000000 -0.545110   \n",
       "count                        -0.004837  -0.003316  -0.545110  1.000000   \n",
       "srv_count                    -0.002612  -0.001638  -0.204404  0.495223   \n",
       "serror_rate                  -0.002759  -0.002713  -0.473045  0.417218   \n",
       "srv_serror_rate              -0.002965  -0.002695  -0.471223  0.412765   \n",
       "rerror_rate                   0.012100   0.009861  -0.310469  0.211820   \n",
       "srv_rerror_rate               0.012295   0.009765  -0.306819  0.212115   \n",
       "same_srv_rate                 0.003620   0.003523   0.603278 -0.615514   \n",
       "diff_srv_rate                -0.000466  -0.001594  -0.227321  0.242816   \n",
       "srv_diff_host_rate           -0.002427  -0.001543   0.138345 -0.256932   \n",
       "dst_host_count               -0.005613   0.002285  -0.394930  0.457295   \n",
       "dst_host_srv_count           -0.006618  -0.003996   0.627855 -0.384582   \n",
       "dst_host_same_srv_rate       -0.006254  -0.004196   0.607905 -0.462368   \n",
       "dst_host_diff_srv_rate        0.000816   0.010066  -0.259323  0.185922   \n",
       "dst_host_same_src_port_rate   0.000570   0.010870  -0.181406 -0.085618   \n",
       "dst_host_srv_diff_host_rate  -0.001414  -0.001165  -0.055647 -0.197371   \n",
       "dst_host_serror_rate         -0.003988  -0.002686  -0.472008  0.418129   \n",
       "dst_host_srv_serror_rate     -0.002931  -0.002609  -0.474094  0.420848   \n",
       "dst_host_rerror_rate         -0.001636   0.010260  -0.297377  0.226650   \n",
       "dst_host_srv_rerror_rate      0.010900   0.009905  -0.298373  0.217048   \n",
       "attack                        0.005572   0.003758  -0.673101  0.550108   \n",
       "last_flag                    -0.019061  -0.015086   0.235555 -0.009282   \n",
       "protocol_type_tcp             0.003459   0.002196   0.390212 -0.082123   \n",
       "protocol_type_udp            -0.002694  -0.001702  -0.302817  0.020369   \n",
       "flag_REJ                     -0.002458  -0.001556  -0.275816  0.245891   \n",
       "flag_RSTO                     0.006688  -0.000536  -0.080358  0.067436   \n",
       "flag_RSTOS0                   0.176353  -0.000126  -0.022302  0.009336   \n",
       "flag_RSTR                    -0.000592   0.028641  -0.088756 -0.080126   \n",
       "...                                ...        ...        ...       ...   \n",
       "service_netstat              -0.000381  -0.000242  -0.042803  0.049744   \n",
       "service_nnsp                 -0.000504  -0.000319  -0.056532  0.020497   \n",
       "service_nntp                 -0.000345  -0.000218  -0.037211  0.040771   \n",
       "service_ntp_u                -0.000259  -0.000163  -0.029045 -0.024637   \n",
       "service_other                -0.001018   0.012448  -0.135194  0.121781   \n",
       "service_pm_dump              -0.000043  -0.000027  -0.004865  0.002108   \n",
       "service_pop_2                -0.000185  -0.000117  -0.020200  0.030484   \n",
       "service_pop_3                -0.000624  -0.000378   0.087942 -0.048076   \n",
       "service_printer              -0.000173  -0.000110  -0.018867  0.006851   \n",
       "service_private               0.000377   0.001653  -0.387680  0.228993   \n",
       "service_red_i                -0.000055  -0.000035  -0.006154 -0.005044   \n",
       "service_remote_job           -0.000186  -0.000118  -0.020875  0.023178   \n",
       "service_rje                  -0.000188  -0.000119  -0.021101  0.020041   \n",
       "service_shell                -0.000155  -0.000111  -0.018397  0.006462   \n",
       "service_smtp                 -0.000462  -0.001103   0.266423 -0.162378   \n",
       "service_sql_net              -0.000315  -0.000199  -0.035316  0.032076   \n",
       "service_ssh                  -0.000356  -0.000224  -0.035609  0.040900   \n",
       "service_sunrpc               -0.000392  -0.000248  -0.044009  0.054587   \n",
       "service_supdup               -0.000464  -0.000294  -0.052092  0.061613   \n",
       "service_systat               -0.000438  -0.000277  -0.049172  0.064442   \n",
       "service_telnet                0.002366   0.000286  -0.028194 -0.039179   \n",
       "service_tftp_u               -0.000039  -0.000025  -0.004351 -0.001323   \n",
       "service_tim_i                -0.000072  -0.000046  -0.008141 -0.006950   \n",
       "service_time                 -0.000511  -0.000323  -0.056675  0.059753   \n",
       "service_urh_i                -0.000061  -0.000039  -0.006880 -0.005929   \n",
       "service_urp_i                -0.000483  -0.000307  -0.054379 -0.041565   \n",
       "service_uucp                 -0.000560  -0.000354  -0.062078  0.021951   \n",
       "service_uucp_path            -0.000527  -0.000334  -0.059135  0.080193   \n",
       "service_vmnet                -0.000499  -0.000316  -0.056022  0.076049   \n",
       "service_whois                -0.000526  -0.000333  -0.059054  0.075991   \n",
       "\n",
       "                             srv_count  serror_rate  srv_serror_rate  \\\n",
       "src_bytes                    -0.002612    -0.002759        -0.002965   \n",
       "dst_bytes                    -0.001638    -0.002713        -0.002695   \n",
       "logged_in                    -0.204404    -0.473045        -0.471223   \n",
       "count                         0.495223     0.417218         0.412765   \n",
       "srv_count                     1.000000    -0.139315        -0.138499   \n",
       "serror_rate                  -0.139315     1.000000         0.992346   \n",
       "srv_serror_rate              -0.138499     0.992346         1.000000   \n",
       "rerror_rate                  -0.115115    -0.222867        -0.221906   \n",
       "srv_rerror_rate              -0.115085    -0.221775        -0.230334   \n",
       "same_srv_rate                 0.188291    -0.725121        -0.720337   \n",
       "diff_srv_rate                -0.107162     0.046802         0.042059   \n",
       "srv_diff_host_rate           -0.079250    -0.207630        -0.209383   \n",
       "dst_host_count                0.151300     0.366003         0.364038   \n",
       "dst_host_srv_count            0.208971    -0.537040        -0.534309   \n",
       "dst_host_same_srv_rate        0.187616    -0.599404        -0.595859   \n",
       "dst_host_diff_srv_rate       -0.108168    -0.010006        -0.018438   \n",
       "dst_host_same_src_port_rate   0.209603    -0.255077        -0.254205   \n",
       "dst_host_srv_diff_host_rate  -0.060130    -0.157589        -0.155993   \n",
       "dst_host_serror_rate         -0.137546     0.979517         0.976527   \n",
       "dst_host_srv_serror_rate     -0.136463     0.980611         0.986711   \n",
       "dst_host_rerror_rate         -0.104901    -0.227845        -0.229363   \n",
       "dst_host_srv_rerror_rate     -0.114330    -0.221188        -0.229064   \n",
       "attack                       -0.009557     0.608217         0.605949   \n",
       "last_flag                    -0.102646     0.032834         0.036131   \n",
       "protocol_type_tcp            -0.535205     0.278915         0.279625   \n",
       "protocol_type_udp             0.350665    -0.215295        -0.216998   \n",
       "flag_REJ                     -0.095135    -0.187157        -0.195808   \n",
       "flag_RSTO                    -0.030869    -0.069642        -0.069492   \n",
       "flag_RSTOS0                  -0.009371     0.018626         0.013434   \n",
       "flag_RSTR                    -0.048007    -0.080923        -0.080285   \n",
       "...                                ...          ...              ...   \n",
       "service_netstat              -0.012372     0.065016         0.065135   \n",
       "service_nnsp                 -0.016143     0.079100         0.079256   \n",
       "service_nntp                 -0.010963     0.060521         0.060559   \n",
       "service_ntp_u                -0.012717    -0.020987        -0.020814   \n",
       "service_other                -0.011307    -0.091425        -0.096070   \n",
       "service_pm_dump              -0.002133    -0.003298        -0.003486   \n",
       "service_pop_2                -0.006007     0.018836         0.018769   \n",
       "service_pop_3                -0.029985    -0.040190        -0.039833   \n",
       "service_printer              -0.005707     0.022931         0.023289   \n",
       "service_private              -0.063408     0.305834         0.303812   \n",
       "service_red_i                -0.002271    -0.004447        -0.004410   \n",
       "service_remote_job           -0.006800     0.017525         0.018927   \n",
       "service_rje                  -0.006287     0.020355         0.020484   \n",
       "service_shell                -0.005851     0.021394         0.020953   \n",
       "service_smtp                 -0.084570    -0.121348        -0.122165   \n",
       "service_sql_net              -0.009652     0.043423         0.043445   \n",
       "service_ssh                  -0.010817     0.052941         0.053064   \n",
       "service_sunrpc               -0.011746     0.060263         0.060308   \n",
       "service_supdup               -0.014154     0.077298         0.077669   \n",
       "service_systat               -0.013716     0.069403         0.069468   \n",
       "service_telnet               -0.039654     0.072531         0.073102   \n",
       "service_tftp_u               -0.001753    -0.003144        -0.003118   \n",
       "service_tim_i                -0.003523    -0.005882        -0.005834   \n",
       "service_time                 -0.017214     0.064705         0.064874   \n",
       "service_urh_i                -0.003017    -0.004971        -0.004930   \n",
       "service_urp_i                -0.022316    -0.039292        -0.038968   \n",
       "service_uucp                 -0.017945     0.084377         0.084457   \n",
       "service_uucp_path            -0.016306     0.081335         0.081429   \n",
       "service_vmnet                -0.015822     0.077846         0.077952   \n",
       "service_whois                -0.016821     0.083587         0.083827   \n",
       "\n",
       "                             rerror_rate  srv_rerror_rate  same_srv_rate  \\\n",
       "src_bytes                       0.012100         0.012295       0.003620   \n",
       "dst_bytes                       0.009861         0.009765       0.003523   \n",
       "logged_in                      -0.310469        -0.306819       0.603278   \n",
       "count                           0.211820         0.212115      -0.615514   \n",
       "srv_count                      -0.115115        -0.115085       0.188291   \n",
       "serror_rate                    -0.222867        -0.221775      -0.725121   \n",
       "srv_serror_rate                -0.221906        -0.230334      -0.720337   \n",
       "rerror_rate                     1.000000         0.988384      -0.281214   \n",
       "srv_rerror_rate                 0.988384         1.000000      -0.280106   \n",
       "same_srv_rate                  -0.281214        -0.280106       1.000000   \n",
       "diff_srv_rate                   0.264935         0.269538      -0.388289   \n",
       "srv_diff_host_rate             -0.089750        -0.087313       0.269364   \n",
       "dst_host_count                  0.108605         0.109893      -0.496507   \n",
       "dst_host_srv_count             -0.293434        -0.291453       0.711035   \n",
       "dst_host_same_srv_rate         -0.308768        -0.306222       0.795451   \n",
       "dst_host_diff_srv_rate          0.353603         0.355271      -0.191511   \n",
       "dst_host_same_src_port_rate    -0.002714        -0.004482       0.261534   \n",
       "dst_host_srv_diff_host_rate     0.011274         0.008991       0.206894   \n",
       "dst_host_serror_rate           -0.221855        -0.221207      -0.723844   \n",
       "dst_host_srv_serror_rate       -0.219230        -0.226876      -0.728468   \n",
       "dst_host_rerror_rate            0.932235         0.922499      -0.285745   \n",
       "dst_host_srv_rerror_rate        0.966852         0.974018      -0.284972   \n",
       "attack                          0.292726         0.291841      -0.735621   \n",
       "last_flag                      -0.061151        -0.060071      -0.040922   \n",
       "protocol_type_tcp               0.185270         0.185165      -0.250490   \n",
       "protocol_type_udp              -0.143743        -0.143693       0.174223   \n",
       "flag_REJ                        0.846521         0.853516      -0.300835   \n",
       "flag_RSTO                       0.299929         0.296741      -0.119676   \n",
       "flag_RSTOS0                     0.025130         0.031637      -0.033088   \n",
       "flag_RSTR                       0.337299         0.338590       0.079962   \n",
       "...                                  ...              ...            ...   \n",
       "service_netstat                 0.010036         0.009820      -0.069411   \n",
       "service_nnsp                    0.022158         0.021729      -0.087712   \n",
       "service_nntp                    0.004872         0.003676      -0.060822   \n",
       "service_ntp_u                  -0.013812        -0.013783       0.013658   \n",
       "service_other                   0.124248         0.129032      -0.065208   \n",
       "service_pm_dump                 0.006167        -0.002309      -0.006602   \n",
       "service_pop_2                   0.020591         0.019708      -0.032147   \n",
       "service_pop_3                  -0.023569        -0.025192       0.042731   \n",
       "service_printer                 0.013134         0.010905      -0.028243   \n",
       "service_private                 0.225363         0.225929      -0.433659   \n",
       "service_red_i                  -0.002926        -0.002920       0.005617   \n",
       "service_remote_job              0.023280         0.021396      -0.029146   \n",
       "service_rje                     0.020119         0.019880      -0.027349   \n",
       "service_shell                   0.013157         0.009417      -0.026315   \n",
       "service_smtp                   -0.084134        -0.085222       0.157249   \n",
       "service_sql_net                 0.020773         0.020938      -0.053960   \n",
       "service_ssh                     0.016512         0.016257      -0.057770   \n",
       "service_sunrpc                  0.018560         0.017161      -0.069969   \n",
       "service_supdup                  0.014623         0.014025      -0.084427   \n",
       "service_systat                  0.018452         0.018215      -0.080931   \n",
       "service_telnet                 -0.012115        -0.013078      -0.010438   \n",
       "service_tftp_u                 -0.002069        -0.002065      -0.007385   \n",
       "service_tim_i                  -0.003871        -0.003863       0.005461   \n",
       "service_time                    0.018278         0.017189      -0.073940   \n",
       "service_urh_i                  -0.003272        -0.003265       0.004063   \n",
       "service_urp_i                  -0.025860        -0.025804      -0.033724   \n",
       "service_uucp                    0.028487         0.027738      -0.097296   \n",
       "service_uucp_path               0.024721         0.024350      -0.097448   \n",
       "service_vmnet                   0.022657         0.022295      -0.092642   \n",
       "service_whois                   0.021853         0.021360      -0.096611   \n",
       "\n",
       "                                 ...        service_telnet  service_tftp_u  \\\n",
       "src_bytes                        ...              0.002366       -0.000039   \n",
       "dst_bytes                        ...              0.000286       -0.000025   \n",
       "logged_in                        ...             -0.028194       -0.004351   \n",
       "count                            ...             -0.039179       -0.001323   \n",
       "srv_count                        ...             -0.039654       -0.001753   \n",
       "serror_rate                      ...              0.072531       -0.003144   \n",
       "srv_serror_rate                  ...              0.073102       -0.003118   \n",
       "rerror_rate                      ...             -0.012115       -0.002069   \n",
       "srv_rerror_rate                  ...             -0.013078       -0.002065   \n",
       "same_srv_rate                    ...             -0.010438       -0.007385   \n",
       "diff_srv_rate                    ...             -0.001351        0.003944   \n",
       "srv_diff_host_rate               ...             -0.052942       -0.001950   \n",
       "dst_host_count                   ...              0.018278       -0.003756   \n",
       "dst_host_srv_count               ...             -0.093371       -0.005456   \n",
       "dst_host_same_srv_rate           ...             -0.082033       -0.005858   \n",
       "dst_host_diff_srv_rate           ...             -0.007794        0.002712   \n",
       "dst_host_same_src_port_rate      ...             -0.047926        0.000827   \n",
       "dst_host_srv_diff_host_rate      ...              0.030347       -0.001482   \n",
       "dst_host_serror_rate             ...              0.080740       -0.003158   \n",
       "dst_host_srv_serror_rate         ...              0.080539       -0.003085   \n",
       "dst_host_rerror_rate             ...             -0.020732       -0.000877   \n",
       "dst_host_srv_rerror_rate         ...             -0.014766       -0.002074   \n",
       "attack                           ...              0.058872       -0.004927   \n",
       "last_flag                        ...             -0.149584       -0.020046   \n",
       "protocol_type_tcp                ...              0.067761       -0.011151   \n",
       "protocol_type_udp                ...             -0.052584        0.014370   \n",
       "flag_REJ                         ...             -0.047896       -0.001752   \n",
       "flag_RSTO                        ...              0.095316       -0.000618   \n",
       "flag_RSTOS0                      ...             -0.000229       -0.000142   \n",
       "flag_RSTR                        ...             -0.008383       -0.000712   \n",
       "...                              ...                   ...             ...   \n",
       "service_netstat                  ...             -0.007433       -0.000272   \n",
       "service_nnsp                     ...             -0.009817       -0.000359   \n",
       "service_nntp                     ...             -0.006723       -0.000246   \n",
       "service_ntp_u                    ...             -0.005044       -0.000184   \n",
       "service_other                    ...             -0.026943       -0.000985   \n",
       "service_pm_dump                  ...             -0.000845       -0.000031   \n",
       "service_pop_2                    ...             -0.003605       -0.000132   \n",
       "service_pop_3                    ...             -0.012175       -0.000445   \n",
       "service_printer                  ...             -0.003380       -0.000124   \n",
       "service_private                  ...             -0.067359       -0.002464   \n",
       "service_red_i                    ...             -0.001069       -0.000039   \n",
       "service_remote_job               ...             -0.003625       -0.000133   \n",
       "service_rje                      ...             -0.003664       -0.000134   \n",
       "service_shell                    ...             -0.003401       -0.000124   \n",
       "service_smtp                     ...             -0.034645       -0.001267   \n",
       "service_sql_net                  ...             -0.006133       -0.000224   \n",
       "service_ssh                      ...             -0.006944       -0.000254   \n",
       "service_sunrpc                   ...             -0.007642       -0.000279   \n",
       "service_supdup                   ...             -0.009046       -0.000331   \n",
       "service_systat                   ...             -0.008539       -0.000312   \n",
       "service_telnet                   ...              1.000000       -0.000756   \n",
       "service_tftp_u                   ...             -0.000756        1.000000   \n",
       "service_tim_i                    ...             -0.001414       -0.000052   \n",
       "service_time                     ...             -0.009948       -0.000364   \n",
       "service_urh_i                    ...             -0.001195       -0.000044   \n",
       "service_urp_i                    ...             -0.009443       -0.000345   \n",
       "service_uucp                     ...             -0.010909       -0.000399   \n",
       "service_uucp_path                ...             -0.010269       -0.000376   \n",
       "service_vmnet                    ...             -0.009728       -0.000356   \n",
       "service_whois                    ...             -0.010255       -0.000375   \n",
       "\n",
       "                             service_tim_i  service_time  service_urh_i  \\\n",
       "src_bytes                        -0.000072     -0.000511      -0.000061   \n",
       "dst_bytes                        -0.000046     -0.000323      -0.000039   \n",
       "logged_in                        -0.008141     -0.056675      -0.006880   \n",
       "count                            -0.006950      0.059753      -0.005929   \n",
       "srv_count                        -0.003523     -0.017214      -0.003017   \n",
       "serror_rate                      -0.005882      0.064705      -0.004971   \n",
       "srv_serror_rate                  -0.005834      0.064874      -0.004930   \n",
       "rerror_rate                      -0.003871      0.018278      -0.003272   \n",
       "srv_rerror_rate                  -0.003863      0.017189      -0.003265   \n",
       "same_srv_rate                     0.005461     -0.073940       0.004063   \n",
       "diff_srv_rate                    -0.000091      0.000624       0.006123   \n",
       "srv_diff_host_rate               -0.003649     -0.025678      -0.003084   \n",
       "dst_host_count                   -0.011454      0.027139      -0.003165   \n",
       "dst_host_srv_count               -0.010349     -0.066968      -0.006327   \n",
       "dst_host_same_srv_rate           -0.000498     -0.058360      -0.006462   \n",
       "dst_host_diff_srv_rate           -0.002828     -0.000073       0.000725   \n",
       "dst_host_same_src_port_rate       0.012726     -0.026978       0.000947   \n",
       "dst_host_srv_diff_host_rate      -0.002773     -0.012218      -0.001966   \n",
       "dst_host_serror_rate             -0.005909      0.063486      -0.004994   \n",
       "dst_host_srv_serror_rate         -0.005772      0.064275      -0.004878   \n",
       "dst_host_rerror_rate             -0.003778      0.019676      -0.003397   \n",
       "dst_host_srv_rerror_rate         -0.003880      0.018060      -0.003279   \n",
       "attack                            0.002046      0.057558      -0.007791   \n",
       "last_flag                        -0.033485     -0.018523       0.004210   \n",
       "protocol_type_tcp                -0.020863      0.032626      -0.017632   \n",
       "protocol_type_udp                -0.003598     -0.025319      -0.003041   \n",
       "flag_REJ                         -0.003277     -0.023061      -0.002770   \n",
       "flag_RSTO                        -0.001155      0.113931      -0.000976   \n",
       "flag_RSTOS0                      -0.000265      0.005586      -0.000224   \n",
       "flag_RSTR                        -0.001331     -0.004840      -0.001125   \n",
       "...                                    ...           ...            ...   \n",
       "service_netstat                  -0.000509     -0.003579      -0.000430   \n",
       "service_nnsp                     -0.000672     -0.004727      -0.000568   \n",
       "service_nntp                     -0.000460     -0.003237      -0.000389   \n",
       "service_ntp_u                    -0.000345     -0.002429      -0.000292   \n",
       "service_other                    -0.001844     -0.012973      -0.001558   \n",
       "service_pm_dump                  -0.000058     -0.000407      -0.000049   \n",
       "service_pop_2                    -0.000247     -0.001736      -0.000208   \n",
       "service_pop_3                    -0.000833     -0.005862      -0.000704   \n",
       "service_printer                  -0.000231     -0.001628      -0.000195   \n",
       "service_private                  -0.004609     -0.032433      -0.003895   \n",
       "service_red_i                    -0.000073     -0.000515      -0.000062   \n",
       "service_remote_job               -0.000248     -0.001745      -0.000210   \n",
       "service_rje                      -0.000251     -0.001764      -0.000212   \n",
       "service_shell                    -0.000233     -0.001638      -0.000197   \n",
       "service_smtp                     -0.002371     -0.016681      -0.002003   \n",
       "service_sql_net                  -0.000420     -0.002953      -0.000355   \n",
       "service_ssh                      -0.000475     -0.003343      -0.000402   \n",
       "service_sunrpc                   -0.000523     -0.003680      -0.000442   \n",
       "service_supdup                   -0.000619     -0.004355      -0.000523   \n",
       "service_systat                   -0.000584     -0.004111      -0.000494   \n",
       "service_telnet                   -0.001414     -0.009948      -0.001195   \n",
       "service_tftp_u                   -0.000052     -0.000364      -0.000044   \n",
       "service_tim_i                     1.000000     -0.000681      -0.000082   \n",
       "service_time                     -0.000681      1.000000      -0.000575   \n",
       "service_urh_i                    -0.000082     -0.000575       1.000000   \n",
       "service_urp_i                    -0.000646     -0.004547      -0.000546   \n",
       "service_uucp                     -0.000746     -0.005253      -0.000631   \n",
       "service_uucp_path                -0.000703     -0.004944      -0.000594   \n",
       "service_vmnet                    -0.000666     -0.004684      -0.000563   \n",
       "service_whois                    -0.000702     -0.004938      -0.000593   \n",
       "\n",
       "                             service_urp_i  service_uucp  service_uucp_path  \\\n",
       "src_bytes                        -0.000483     -0.000560          -0.000527   \n",
       "dst_bytes                        -0.000307     -0.000354          -0.000334   \n",
       "logged_in                        -0.054379     -0.062078          -0.059135   \n",
       "count                            -0.041565      0.021951           0.080193   \n",
       "srv_count                        -0.022316     -0.017945          -0.016306   \n",
       "serror_rate                      -0.039292      0.084377           0.081335   \n",
       "srv_serror_rate                  -0.038968      0.084457           0.081429   \n",
       "rerror_rate                      -0.025860      0.028487           0.024721   \n",
       "srv_rerror_rate                  -0.025804      0.027738           0.024350   \n",
       "same_srv_rate                    -0.033724     -0.097296          -0.097448   \n",
       "diff_srv_rate                     0.137753      0.004396           0.002596   \n",
       "srv_diff_host_rate               -0.018755     -0.028160          -0.026506   \n",
       "dst_host_count                    0.038902      0.054857           0.051797   \n",
       "dst_host_srv_count               -0.055168     -0.073825          -0.069099   \n",
       "dst_host_same_srv_rate           -0.062106     -0.083123          -0.077898   \n",
       "dst_host_diff_srv_rate           -0.021514     -0.004330          -0.001658   \n",
       "dst_host_same_src_port_rate      -0.004669     -0.034263          -0.031293   \n",
       "dst_host_srv_diff_host_rate      -0.015960     -0.021401          -0.020145   \n",
       "dst_host_serror_rate             -0.039453      0.084704           0.081660   \n",
       "dst_host_srv_serror_rate         -0.038554      0.085381           0.082306   \n",
       "dst_host_rerror_rate             -0.026768      0.029006           0.025385   \n",
       "dst_host_srv_rerror_rate         -0.025918      0.028283           0.024843   \n",
       "attack                           -0.060515      0.080977           0.076223   \n",
       "last_flag                        -0.012743     -0.009100          -0.006321   \n",
       "protocol_type_tcp                -0.139356      0.035779           0.033678   \n",
       "protocol_type_udp                -0.024033     -0.027766          -0.026135   \n",
       "flag_REJ                         -0.021890     -0.024679           0.032911   \n",
       "flag_RSTO                        -0.007717      0.153857          -0.008392   \n",
       "flag_RSTOS0                      -0.001770     -0.002045          -0.001925   \n",
       "flag_RSTR                        -0.008892     -0.008206          -0.005282   \n",
       "...                                    ...           ...                ...   \n",
       "service_netstat                  -0.003397     -0.003925          -0.003694   \n",
       "service_nnsp                     -0.004487     -0.005183          -0.004879   \n",
       "service_nntp                     -0.003073     -0.003550          -0.003342   \n",
       "service_ntp_u                    -0.002305     -0.002663          -0.002507   \n",
       "service_other                    -0.012314     -0.014226          -0.013391   \n",
       "service_pm_dump                  -0.000386     -0.000446          -0.000420   \n",
       "service_pop_2                    -0.001648     -0.001904          -0.001792   \n",
       "service_pop_3                    -0.005564     -0.006428          -0.006051   \n",
       "service_printer                  -0.001545     -0.001785          -0.001680   \n",
       "service_private                  -0.030786     -0.035567          -0.033479   \n",
       "service_red_i                    -0.000488     -0.000564          -0.000531   \n",
       "service_remote_job               -0.001657     -0.001914          -0.001802   \n",
       "service_rje                      -0.001675     -0.001935          -0.001821   \n",
       "service_shell                    -0.001555     -0.001796          -0.001690   \n",
       "service_smtp                     -0.015834     -0.018293          -0.017219   \n",
       "service_sql_net                  -0.002803     -0.003238          -0.003048   \n",
       "service_ssh                      -0.003174     -0.003666          -0.003451   \n",
       "service_sunrpc                   -0.003493     -0.004035          -0.003798   \n",
       "service_supdup                   -0.004134     -0.004776          -0.004496   \n",
       "service_systat                   -0.003903     -0.004509          -0.004244   \n",
       "service_telnet                   -0.009443     -0.010909          -0.010269   \n",
       "service_tftp_u                   -0.000345     -0.000399          -0.000376   \n",
       "service_tim_i                    -0.000646     -0.000746          -0.000703   \n",
       "service_time                     -0.004547     -0.005253          -0.004944   \n",
       "service_urh_i                    -0.000546     -0.000631          -0.000594   \n",
       "service_urp_i                     1.000000     -0.004986          -0.004693   \n",
       "service_uucp                     -0.004986      1.000000          -0.005422   \n",
       "service_uucp_path                -0.004693     -0.005422           1.000000   \n",
       "service_vmnet                    -0.004446     -0.005137          -0.004835   \n",
       "service_whois                    -0.004687     -0.005415          -0.005097   \n",
       "\n",
       "                             service_vmnet  service_whois  \n",
       "src_bytes                        -0.000499      -0.000526  \n",
       "dst_bytes                        -0.000316      -0.000333  \n",
       "logged_in                        -0.056022      -0.059054  \n",
       "count                             0.076049       0.075991  \n",
       "srv_count                        -0.015822      -0.016821  \n",
       "serror_rate                       0.077846       0.083587  \n",
       "srv_serror_rate                   0.077952       0.083827  \n",
       "rerror_rate                       0.022657       0.021853  \n",
       "srv_rerror_rate                   0.022295       0.021360  \n",
       "same_srv_rate                    -0.092642      -0.096611  \n",
       "diff_srv_rate                     0.001673       0.004057  \n",
       "srv_diff_host_rate               -0.025111      -0.026470  \n",
       "dst_host_count                    0.048108       0.050199  \n",
       "dst_host_srv_count               -0.065855      -0.069478  \n",
       "dst_host_same_srv_rate           -0.074093      -0.078195  \n",
       "dst_host_diff_srv_rate           -0.001206      -0.000206  \n",
       "dst_host_same_src_port_rate      -0.029568      -0.031735  \n",
       "dst_host_srv_diff_host_rate      -0.019084      -0.017462  \n",
       "dst_host_serror_rate              0.078095       0.083834  \n",
       "dst_host_srv_serror_rate          0.078786       0.084711  \n",
       "dst_host_rerror_rate              0.023155       0.020404  \n",
       "dst_host_srv_rerror_rate          0.022753       0.021817  \n",
       "attack                            0.072210       0.076118  \n",
       "last_flag                        -0.010261      -0.008256  \n",
       "protocol_type_tcp                 0.031906       0.033632  \n",
       "protocol_type_udp                -0.024760      -0.026100  \n",
       "flag_REJ                          0.030104       0.028801  \n",
       "flag_RSTO                        -0.007950      -0.008380  \n",
       "flag_RSTOS0                      -0.001824       0.001693  \n",
       "flag_RSTR                        -0.004532      -0.003798  \n",
       "...                                    ...            ...  \n",
       "service_netstat                  -0.003500      -0.003689  \n",
       "service_nnsp                     -0.004622      -0.004872  \n",
       "service_nntp                     -0.003166      -0.003337  \n",
       "service_ntp_u                    -0.002375      -0.002503  \n",
       "service_other                    -0.012686      -0.013373  \n",
       "service_pm_dump                  -0.000398      -0.000419  \n",
       "service_pop_2                    -0.001698      -0.001789  \n",
       "service_pop_3                    -0.005733      -0.006043  \n",
       "service_printer                  -0.001592      -0.001678  \n",
       "service_private                  -0.031717      -0.033433  \n",
       "service_red_i                    -0.000503      -0.000530  \n",
       "service_remote_job               -0.001707      -0.001799  \n",
       "service_rje                      -0.001725      -0.001819  \n",
       "service_shell                    -0.001602      -0.001688  \n",
       "service_smtp                     -0.016313      -0.017196  \n",
       "service_sql_net                  -0.002888      -0.003044  \n",
       "service_ssh                      -0.003270      -0.003446  \n",
       "service_sunrpc                   -0.003598      -0.003793  \n",
       "service_supdup                   -0.004259      -0.004490  \n",
       "service_systat                   -0.004021      -0.004238  \n",
       "service_telnet                   -0.009728      -0.010255  \n",
       "service_tftp_u                   -0.000356      -0.000375  \n",
       "service_tim_i                    -0.000666      -0.000702  \n",
       "service_time                     -0.004684      -0.004938  \n",
       "service_urh_i                    -0.000563      -0.000593  \n",
       "service_urp_i                    -0.004446      -0.004687  \n",
       "service_uucp                     -0.005137      -0.005415  \n",
       "service_uucp_path                -0.004835      -0.005097  \n",
       "service_vmnet                     1.000000      -0.004829  \n",
       "service_whois                    -0.004829       1.000000  \n",
       "\n",
       "[105 rows x 105 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data4\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x269231f9b38>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#heatmap used to view correlations\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(10, 5))\n",
    "\n",
    "sns.heatmap(Var_Corr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "data4.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\model\\\\corrC.csv') #saving data4 dataframe as new csv file "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>10. Profiling"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pandas Profiling is used for simple and fast exploratory data analysis of a Pandas Dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The first part of the HTML EDA report will contain an overview section providing you with basic information (number of observations, number of variables, etc.). It will also output a list of warnings telling you where to double-check the data and potentially focus your cleaning efforts on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas_profiling #importing pandas profiling "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "df7=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\model\\\\concate3.csv') #reading a csv file "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "#To retrieve the list of variables which are rejected due to high correlation\n",
    "profile = pandas_profiling.ProfileReport(df7)\n",
    "rejected_variables = profile.get_rejected_variables(threshold=0.9)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "#If you want to generate a HTML report file, save the ProfileReport to an object and use the to_file() function:\n",
    "profile.to_file(outputfile=\"C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\DS\\\\outputN.html\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>11. Removing all highly correlated columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "df8=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\model\\\\concate3.csv') #reading the new dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(144744, 105)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df8.shape #fingind out the shape of dataset\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropped highly correlated columns using pandas profiling\n",
    "df8.drop(['dst_host_rerror_rate','dst_host_serror_rate','dst_host_srv_rerror_rate','dst_host_srv_serror_rate','flag_S0','srv_rerror_rate','srv_serror_rate'], inplace=True,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(144744, 98)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df8.shape #checking the number of columns and rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "df8.to_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv',index=False) #saving the dataframe as new csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5> SELECTION OF COLUMNS WHICH ARE TO BE USED IN THE MODELS "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df9=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv') #reading the dataset into a new dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(144744, 98)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df9.shape #checking the number of columns and rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These columns only include correlated columns wrt dependent variable(attack) \n",
    "# has no columns that are highly correlated among them self\n",
    "x=df9[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]\n",
    "y=df9['attack']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>SPLITTING OF DATASET IN TRAIN AND TEST"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting the dataset into train(75%) and test(25%) \n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>COMPARISION B/W CONCATENATED AND SPLIT DATASET "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "logged_in                     0.405451\n",
       "count                        84.803920\n",
       "serror_rate                   0.259412\n",
       "rerror_rate                   0.131147\n",
       "diff_srv_rate                 0.063831\n",
       "srv_diff_host_rate            0.093443\n",
       "dst_host_count              183.200658\n",
       "dst_host_same_srv_rate        0.533148\n",
       "dst_host_diff_srv_rate        0.083072\n",
       "last_flag                    19.417113\n",
       "protocol_type_udp             0.117808\n",
       "service_domain_u              0.068784\n",
       "service_eco_i                 0.033033\n",
       "service_ecr_i                 0.026788\n",
       "service_http                  0.327530\n",
       "service_private               0.179710\n",
       "service_smtp                  0.054561\n",
       "flag_REJ                      0.100158\n",
       "flag_RSTR                     0.018294\n",
       "src_bytes                 39745.346156\n",
       "dst_bytes                 22379.667560\n",
       "dst_host_srv_count          118.899086\n",
       "flag_RSTO                     0.013375\n",
       "dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.mean() #finding out the mean of each column in train "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "logged_in                     0.406317\n",
       "count                        84.907810\n",
       "serror_rate                   0.257437\n",
       "rerror_rate                   0.131947\n",
       "diff_srv_rate                 0.064328\n",
       "srv_diff_host_rate            0.094396\n",
       "dst_host_count              182.649754\n",
       "dst_host_same_srv_rate        0.532557\n",
       "dst_host_diff_srv_rate        0.084774\n",
       "last_flag                    19.408114\n",
       "protocol_type_udp             0.120074\n",
       "service_domain_u              0.069087\n",
       "service_eco_i                 0.033217\n",
       "service_ecr_i                 0.024816\n",
       "service_http                  0.326286\n",
       "service_private               0.182004\n",
       "service_smtp                  0.056044\n",
       "flag_REJ                      0.100204\n",
       "flag_RSTR                     0.018322\n",
       "src_bytes                 45926.901315\n",
       "dst_bytes                  2751.088239\n",
       "dst_host_srv_count          118.768419\n",
       "flag_RSTO                     0.013956\n",
       "dtype: float64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.mean()  #finding out the mmean of each column in test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#bf dataframe contains only numerical columns\n",
    "#categorical and singled valued were not included\n",
    "bf=df9[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#function used to print quartiles from all the above mentioned columns\n",
    "def quar(s):\n",
    "    data = bf[s]\n",
    "    print(data.quantile(0.2))\n",
    "    print(data.quantile(0.25))\n",
    "    print(data.quantile(0.50))\n",
    "    print(data.quantile(0.60))\n",
    "    print(data.quantile(0.75))\n",
    "    print(data.quantile(1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "logged_in\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "count\n",
      "1.0\n",
      "2.0\n",
      "14.0\n",
      "42.0\n",
      "143.0\n",
      "511.0\n",
      "\n",
      "\n",
      "\n",
      "serror_rate\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.99\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "rerror_rate\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "diff_srv_rate\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.06\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "srv_diff_host_rate\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_count\n",
      "52.0\n",
      "84.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "255.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_same_srv_rate\n",
      "0.04\n",
      "0.05\n",
      "0.6\n",
      "1.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_diff_srv_rate\n",
      "0.0\n",
      "0.0\n",
      "0.02\n",
      "0.05\n",
      "0.07\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "last_flag\n",
      "18.0\n",
      "18.0\n",
      "21.0\n",
      "21.0\n",
      "21.0\n",
      "21.0\n",
      "\n",
      "\n",
      "\n",
      "protocol_type_udp\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_domain_u\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_eco_i\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_ecr_i\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_http\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_private\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "service_smtp\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "flag_REJ\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "flag_RSTR\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n",
      "src_bytes\n",
      "0.0\n",
      "0.0\n",
      "45.0\n",
      "198.0\n",
      "279.0\n",
      "1379963888.0\n",
      "\n",
      "\n",
      "\n",
      "dst_bytes\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "129.0\n",
      "599.0\n",
      "1309937401.0\n",
      "\n",
      "\n",
      "\n",
      "dst_host_srv_count\n",
      "8.0\n",
      "11.0\n",
      "69.0\n",
      "177.0\n",
      "255.0\n",
      "255.0\n",
      "\n",
      "\n",
      "\n",
      "flag_RSTO\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "0.0\n",
      "1.0\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#for loop used to print quartiles from all the above mentioned columns\n",
    "for x in bf:\n",
    "    print(x)\n",
    "    quar(x)\n",
    "    print('\\n\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>LOGISTIC REGRESSION ON CONCATENATED DATA SET"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Logistic regression is the appropriate regression analysis to conduct when the dependent variable is binary.  Like all regression analyses, the logistic regression is a predictive analysis.  Logistic regression is used to describe data and to explain the relationship between one dependent binary variable and one or more independent variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing libraries useful implementation of logistic regression\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>1. Reading of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df9=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv') #reading the dataset into a new dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>2.Feature selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These columns only include correlated columns wrt dependent variable(attack) \n",
    "# has no columns that are highly correlated among them self\n",
    "x=df9[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]\n",
    "y=df9['attack']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>3.Splitting of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting the dataset into train(75%) and test(25%) \n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>4. Model Fitting "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression #used to import logistic regression algorithm\n",
    "LR_model = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "D:\\Anaconda\\lib\\site-packages\\sklearn\\linear_model\\logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n",
       "          intercept_scaling=1, max_iter=100, multi_class='warn',\n",
       "          n_jobs=None, penalty='l2', random_state=None, solver='warn',\n",
       "          tol=0.0001, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LR_model.fit(x_train, y_train) #model is fit using train data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>5. Train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.8706774258921498\n"
     ]
    }
   ],
   "source": [
    "y_predicted1 = LR_model.predict(x_train) #prediction done by using train data\n",
    "\n",
    "from sklearn.metrics import accuracy_score\n",
    "print(\"Accuracy:\",accuracy_score(y_train, y_predicted1)) #printing the accuracy of model trained"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.87      0.85      0.86     50862\n",
      "      normal       0.87      0.89      0.88     57696\n",
      "\n",
      "   micro avg       0.87      0.87      0.87    108558\n",
      "   macro avg       0.87      0.87      0.87    108558\n",
      "weighted avg       0.87      0.87      0.87    108558\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "print(classification_report(y_train,y_predicted1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A confusion matrix is a summary of prediction results on a classification problem on a set of data for which the true values are known. The confusion matrix shows the ways in which your classification model is confused when it makes predictions. It gives us insight not only into the errors being made by a classifier but more importantly the types of errors that are being made."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[42982,  7880],\n",
       "       [ 6159, 51537]], dtype=int64)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#confusion matrix\n",
    "from sklearn.metrics import confusion_matrix \n",
    "cm1=confusion_matrix(y_train,y_predicted1) \n",
    "cm1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.8706774258921498\n",
      "Sensitivity :  0.8450709763674256\n",
      "Specificity :  0.8932508319467554\n",
      "precision :  0.8746667751978999\n",
      "error rate :  0.12932257410785017\n",
      "fscore :  0.8596142115736528\n"
     ]
    }
   ],
   "source": [
    "total1=sum(sum(cm1))\n",
    "accuracy1=(cm1[0,0]+cm1[1,1])/total1\n",
    "print ('Accuracy : ', accuracy1)\n",
    "sensitivity1 = cm1[0,0]/(cm1[0,0]+cm1[0,1])\n",
    "print('Sensitivity : ', sensitivity1 )\n",
    "specificity1 = cm1[1,1]/(cm1[1,0]+cm1[1,1])\n",
    "print('Specificity : ', specificity1)\n",
    "precision1 = cm1[0,0]/(cm1[0,0]+cm1[1,0])\n",
    "print('precision : ', precision1)\n",
    "error_rate1 = (cm1[0,1]+cm1[1,0])/total1\n",
    "print('error rate : ',error_rate1)\n",
    "fscore1 = 2*(precision1*sensitivity1)/(precision1+sensitivity1)\n",
    "print('fscore : ',fscore1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>6. Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.86947990935721\n"
     ]
    }
   ],
   "source": [
    "y_predicted2 = LR_model.predict(x_test) #prediction done by using test data\n",
    "print(\"Accuracy:\",accuracy_score(y_test, y_predicted2)) #printing the accuracy of model trained"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(36186,)"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.shape #finding out the no of rows and columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.88      0.84      0.86     16828\n",
      "      normal       0.86      0.90      0.88     19358\n",
      "\n",
      "   micro avg       0.87      0.87      0.87     36186\n",
      "   macro avg       0.87      0.87      0.87     36186\n",
      "weighted avg       0.87      0.87      0.87     36186\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report \n",
    "print(classification_report(y_test,y_predicted2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[14094,  2734],\n",
       "       [ 1989, 17369]], dtype=int64)"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#confusion matrix\n",
    "from sklearn.metrics import confusion_matrix \n",
    "cm2=confusion_matrix(y_test,y_predicted2)\n",
    "cm2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.86947990935721\n",
      "Sensitivity :  0.8375326836225339\n",
      "Specificity :  0.8972517822089059\n",
      "precision :  0.876329043088976\n",
      "error rate :  0.13052009064279002\n",
      "fscore :  0.8564917504785635\n"
     ]
    }
   ],
   "source": [
    "total2=sum(sum(cm2))\n",
    "accuracy2=(cm2[0,0]+cm2[1,1])/total2\n",
    "print ('Accuracy : ', accuracy2)\n",
    "sensitivity2 = cm2[0,0]/(cm2[0,0]+cm2[0,1])\n",
    "print('Sensitivity : ', sensitivity2 )\n",
    "specificity2 = cm2[1,1]/(cm2[1,0]+cm2[1,1])\n",
    "print('Specificity : ', specificity2)\n",
    "precision2 = cm2[0,0]/(cm2[0,0]+cm2[1,0])\n",
    "print('precision : ', precision2)\n",
    "error_rate2 = (cm2[0,1]+cm2[1,0])/total2\n",
    "print('error rate : ',error_rate2)\n",
    "fscore2 = 2*(precision2*sensitivity2)/(precision2+sensitivity2)\n",
    "print('fscore : ',fscore2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>7. roc curve"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "AUC - ROC curve is a performance measurement for classification problem at various thresholds settings. ROC is a probability curve and AUC represents degree or measure of separability. It tells how much model is capable of distinguishing between classes. Higher the AUC, better the model is at predicting normal as normal and attack as attack. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [],
   "source": [
    "#df0=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concint.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [],
   "source": [
    "#x1=df0[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]\n",
    "#y1=df0['attack']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "#from sklearn.model_selection import train_test_split\n",
    "#x_train, x_test, y_train, y_test1 = train_test_split(x1,y1,test_size=0.25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df10=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv') #reading the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test2=y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test2.replace({'normal':0,'attack':1},inplace=True) #converting normal to 0 and attack to 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score ,auc #importing libraries to implement auc-roc curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#the function used to replace normal to 0 and attack to 1 in the prediction made  \n",
    "def replace(x):\n",
    "    for i in range(36186):\n",
    "        if x[i] == 'normal':\n",
    "            x[i] = 0\n",
    "        elif x[i] == 'attack':\n",
    "            x[i] = 1\n",
    "replace(y_predicted2)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "log_Roc_auc=roc_auc_score(y_test2,y_predicted2)\n",
    "fpr, tpr, thresholds = roc_curve(y_test2,y_predicted2)\n",
    "roc_auc = auc(fpr, tpr)\n",
    "import matplotlib.pyplot as plt\n",
    "plt.figure()\n",
    "plt.plot(fpr, tpr, color='red',\n",
    " lw=2, label='Accuracy = %0.3f' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color='blue', lw=2, linestyle='--')\n",
    "plt.xlabel('FPR')\n",
    "plt.ylabel('TPR')\n",
    "plt.title('ROC curve')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.10274822, 1.        ])"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.83753268, 1.        ])"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 0], dtype=object)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thresholds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>RANDOM FOREST ON CONCATENATED DATASET"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>1. Reading the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df10=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv') #reading the dataset into a new dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>2.Feature selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These columns only include correlated columns wrt dependent variable(attack) \n",
    "# has no columns that are highly correlated among them self\n",
    "x=df10[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]\n",
    "y=df10['attack']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>3.Splitting of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting the dataset into train(75%) and test(25%) \n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>4. Model Fitting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n",
       "            max_depth=20, max_features='auto', max_leaf_nodes=10,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=500, min_samples_split=500,\n",
       "            min_weight_fraction_leaf=0.0, n_estimators=200, n_jobs=-1,\n",
       "            oob_score=True, random_state=100, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#model is fit using random forest algorithm\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "RF_model = RandomForestClassifier(random_state=100, max_features='auto', n_estimators=200,oob_score=True,n_jobs=-1,min_samples_leaf=500, max_leaf_nodes=10,max_depth=20,min_samples_split=500)\n",
    "RF_model.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>5. Train "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9632270307116932\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "y_predicted3 = RF_model.predict(x_train) #prediction of target variable done using train data\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_train, y_predicted3)) #printing the accuracy of the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.98      0.94      0.96     50862\n",
      "      normal       0.95      0.98      0.97     57696\n",
      "\n",
      "   micro avg       0.96      0.96      0.96    108558\n",
      "   macro avg       0.96      0.96      0.96    108558\n",
      "weighted avg       0.96      0.96      0.96    108558\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report \n",
    "print(classification_report(y_train,y_predicted3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A confusion matrix is a summary of prediction results on a classification problem on a set of data for which the true values are known. The confusion matrix shows the ways in which your classification model is confused when it makes predictions. It gives us insight not only into the errors being made by a classifier but more importantly the types of errors that are being made."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[47875,  2987],\n",
       "       [ 1005, 56691]], dtype=int64)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#confusion matrix\n",
    "from sklearn.metrics import confusion_matrix \n",
    "cm3=confusion_matrix(y_train,y_predicted3)\n",
    "cm3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.9632270307116932\n",
      "Sensitivity :  0.9412724627423223\n",
      "Specificity :  0.9825811148086523\n",
      "precision :  0.9794394435351882\n",
      "error rate :  0.036772969288306714\n",
      "fscore :  0.959976739989172\n"
     ]
    }
   ],
   "source": [
    "#all the calculations are made using confusion matrix\n",
    "total3=sum(sum(cm3))\n",
    "accuracy3=(cm3[0,0]+cm3[1,1])/total3\n",
    "print ('Accuracy : ', accuracy3)\n",
    "sensitivity3 = cm3[0,0]/(cm3[0,0]+cm3[0,1])\n",
    "print('Sensitivity : ', sensitivity3 )\n",
    "specificity3 = cm3[1,1]/(cm3[1,0]+cm3[1,1])\n",
    "print('Specificity : ', specificity3)\n",
    "precision3 = cm3[0,0]/(cm3[0,0]+cm3[1,0])\n",
    "print('precision : ', precision3)\n",
    "error_rate3 = (cm3[0,1]+cm3[1,0])/total3\n",
    "print('error rate : ',error_rate3)\n",
    "fscore3 = 2*(precision3*sensitivity3)/(precision3+sensitivity3)\n",
    "print('fscore : ',fscore3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>6. Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9618913391919527\n"
     ]
    }
   ],
   "source": [
    "y_predicted4 = RF_model.predict(x_test) #predictioom made using test data\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_predicted4)) #printing accuracy score of the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.98      0.94      0.96     16827\n",
      "      normal       0.95      0.98      0.96     19359\n",
      "\n",
      "   micro avg       0.96      0.96      0.96     36186\n",
      "   macro avg       0.96      0.96      0.96     36186\n",
      "weighted avg       0.96      0.96      0.96     36186\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "print(classification_report(y_test,y_predicted4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[15804,  1023],\n",
       "       [  356, 19003]], dtype=int64)"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix #printing a confusion matrix \n",
    "cm4=confusion_matrix(y_test,y_predicted4)\n",
    "cm4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.9618913391919527\n",
      "Sensitivity :  0.9392048493492601\n",
      "Specificity :  0.9816106203832843\n",
      "precision :  0.977970297029703\n",
      "error rate :  0.03810866080804731\n",
      "fscore :  0.9581956528329342\n"
     ]
    }
   ],
   "source": [
    "total4=sum(sum(cm4))\n",
    "accuracy4=(cm4[0,0]+cm4[1,1])/total4\n",
    "print ('Accuracy : ', accuracy4)\n",
    "sensitivity4 = cm4[0,0]/(cm4[0,0]+cm4[0,1])\n",
    "print('Sensitivity : ', sensitivity4 )\n",
    "specificity4 = cm4[1,1]/(cm4[1,0]+cm4[1,1])\n",
    "print('Specificity : ', specificity4)\n",
    "precision4 = cm4[0,0]/(cm4[0,0]+cm4[1,0])\n",
    "print('precision : ', precision4)\n",
    "error_rate4 = (cm4[0,1]+cm4[1,0])/total4\n",
    "print('error rate : ',error_rate4)\n",
    "fscore4 = 2*(precision4*sensitivity4)/(precision4+sensitivity4)\n",
    "print('fscore : ',fscore4)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>7. Roc Curve"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "AUC - ROC curve is a performance measurement for classification problem at various thresholds settings. ROC is a probability curve and AUC represents degree or measure of separability. It tells how much model is capable of distinguishing between classes. Higher the AUC, better the model is at predicting normal as normal and attack as attack. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score, auc #importing libraries to implement auc-roc curve "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test4=y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test4.replace({'normal':0,'attack':1},inplace=True) #replacing normal with 0 and attack with 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "#function used to replace noraml and attack in prediction made to 1 and 0\n",
    "def replace(x):\n",
    "    for i in range(36186):\n",
    "        if x[i] == 'normal':\n",
    "            x[i] = 0\n",
    "        elif x[i] == 'attack':\n",
    "            x[i] = 1\n",
    "replace(y_predicted4)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import sklearn.metrics as metrics\n",
    "import matplotlib.pyplot as plt\n",
    "RF_Roc_auc=roc_auc_score(y_test4,y_predicted4)\n",
    "fpr, tpr, thresholds = roc_curve(y_test4,y_predicted4)\n",
    "roc_auc = auc(fpr, tpr)\n",
    "plt.figure()\n",
    "plt.plot(fpr,tpr,color='orange',label = 'Accuracy = %0.3f' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color='green', lw=2, linestyle='--')\n",
    "plt.xlabel('FPR')\n",
    "plt.ylabel('TPR')\n",
    "plt.title('ROC curve')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.01838938, 1.        ])"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.93920485, 1.        ])"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 0], dtype=object)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thresholds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>DECISION TREE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>1. reading the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df10=pd.read_csv('C:\\\\Users\\\\Administrator.EONEHYD016\\\\Desktop\\\\new\\\\concate_after_hc1.csv') #reading the dataset into a new dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>2. feature selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# These columns only include correlated columns wrt dependent variable(attack) \n",
    "# has no columns that are highly correlated among them self\n",
    "x=df10[['logged_in','count','serror_rate','rerror_rate','diff_srv_rate','srv_diff_host_rate','dst_host_count','dst_host_same_srv_rate','dst_host_diff_srv_rate','last_flag','protocol_type_udp','service_domain_u','service_eco_i','service_ecr_i','service_http','service_private','service_smtp','flag_REJ','flag_RSTR','src_bytes','dst_bytes','dst_host_srv_count','flag_RSTO']]\n",
    "y=df10['attack']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>3. splitting of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#splitting the dataset into train(75%) and test(25%) \n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>4. Model Fitting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=20,\n",
       "            max_features='auto', max_leaf_nodes=10,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=500, min_samples_split=500,\n",
       "            min_weight_fraction_leaf=0.0, presort=False, random_state=50,\n",
       "            splitter='best')"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "DT_model = tree.DecisionTreeClassifier(random_state=50, max_features='auto',min_samples_leaf=500, max_leaf_nodes=10,max_depth=20,min_samples_split=500)\n",
    "DT_model.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>5. Train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9559129681829068\n"
     ]
    }
   ],
   "source": [
    "y_predicted5 = DT_model.predict(x_train)\n",
    "from sklearn import metrics\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_train, y_predicted5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.95      0.96      0.95     50949\n",
      "      normal       0.96      0.95      0.96     57609\n",
      "\n",
      "   micro avg       0.96      0.96      0.96    108558\n",
      "   macro avg       0.96      0.96      0.96    108558\n",
      "weighted avg       0.96      0.96      0.96    108558\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "print(classification_report(y_train,y_predicted5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[48875,  2074],\n",
       "       [ 2712, 54897]], dtype=int64)"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix \n",
    "cm5=confusion_matrix(y_train,y_predicted5)\n",
    "cm5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.9559129681829068\n",
      "Sensitivity :  0.9592926259592927\n",
      "Specificity :  0.9529240222881842\n",
      "precision :  0.9474286157365228\n",
      "error rate :  0.04408703181709317\n",
      "fscore :  0.9533237106967309\n"
     ]
    }
   ],
   "source": [
    "total5=sum(sum(cm5))\n",
    "accuracy5=(cm5[0,0]+cm5[1,1])/total5\n",
    "print ('Accuracy : ', accuracy5)\n",
    "sensitivity5 = cm5[0,0]/(cm5[0,0]+cm5[0,1])\n",
    "print('Sensitivity : ', sensitivity5 )\n",
    "specificity5 = cm5[1,1]/(cm5[1,0]+cm5[1,1])\n",
    "print('Specificity : ', specificity5)\n",
    "precision5 = cm5[0,0]/(cm5[0,0]+cm5[1,0])\n",
    "print('precision : ', precision5)\n",
    "error_rate5 = (cm5[0,1]+cm5[1,0])/total5\n",
    "print('error rate : ',error_rate5)\n",
    "fscore5 = 2*(precision5*sensitivity5)/(precision5+sensitivity5)\n",
    "print('fscore : ',fscore5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>6. Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9539877300613497\n"
     ]
    }
   ],
   "source": [
    "y_predicted6 = DT_model.predict(x_test)\n",
    "print(\"Accuracy:\",metrics.accuracy_score(y_test, y_predicted6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      attack       0.94      0.96      0.95     16741\n",
      "      normal       0.96      0.95      0.96     19445\n",
      "\n",
      "   micro avg       0.95      0.95      0.95     36186\n",
      "   macro avg       0.95      0.95      0.95     36186\n",
      "weighted avg       0.95      0.95      0.95     36186\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "print(classification_report(y_test,y_predicted6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[16033,   708],\n",
       "       [  957, 18488]], dtype=int64)"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix \n",
    "cm6=confusion_matrix(y_test,y_predicted6)\n",
    "cm6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy :  0.9539877300613497\n",
      "Sensitivity :  0.9577086195567768\n",
      "Specificity :  0.9507842633067627\n",
      "precision :  0.9436727486756916\n",
      "error rate :  0.046012269938650305\n",
      "fscore :  0.9506388781832736\n"
     ]
    }
   ],
   "source": [
    "total6=sum(sum(cm6))\n",
    "accuracy6=(cm6[0,0]+cm6[1,1])/total6\n",
    "print ('Accuracy : ', accuracy6)\n",
    "sensitivity6 = cm6[0,0]/(cm6[0,0]+cm6[0,1])\n",
    "print('Sensitivity : ', sensitivity6 )\n",
    "specificity6 = cm6[1,1]/(cm6[1,0]+cm6[1,1])\n",
    "print('Specificity : ', specificity6)\n",
    "precision6 = cm6[0,0]/(cm6[0,0]+cm6[1,0])\n",
    "print('precision : ', precision6)\n",
    "error_rate6 = (cm6[0,1]+cm6[1,0])/total6\n",
    "print('error rate : ',error_rate6)\n",
    "fscore6 = 2*(precision6*sensitivity6)/(precision6+sensitivity6)\n",
    "print('fscore : ',fscore6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>7. plotting decision tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.externals.six import StringIO  \n",
    "from IPython.display import Image  \n",
    "from sklearn.tree import export_graphviz\n",
    "import pydotplus\n",
    "dot_data = StringIO()\n",
    "\n",
    "export_graphviz(model, out_file=dot_data,impurity=True,\n",
    "                filled=True, rounded=True,\n",
    "                special_characters=True)\n",
    "graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \n",
    "Image(graph.create_png())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h5>8. Roc Curve"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import confusion_matrix, roc_curve, roc_auc_score, auc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test6=y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test6.replace({'normal':0,'attack':1},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "def replace(x):\n",
    "    for i in range(36186):\n",
    "        if x[i] == 'normal':\n",
    "            x[i] = 0\n",
    "        elif x[i] == 'attack':\n",
    "            x[i] = 1\n",
    "replace(y_predicted6)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import sklearn.metrics as metrics\n",
    "import matplotlib.pyplot as plt\n",
    "DT_Roc_auc=roc_auc_score(y_test6,y_predicted6)\n",
    "fpr, tpr, thresholds = roc_curve(y_test6,y_predicted6)\n",
    "roc_auc = auc(fpr, tpr)\n",
    "plt.figure()\n",
    "plt.plot(fpr,tpr,color='orange',label = 'Accuracy = %0.3f' % roc_auc)\n",
    "plt.plot([0, 1], [0, 1], color='green', lw=2, linestyle='--')\n",
    "plt.xlabel('FPR')\n",
    "plt.ylabel('TPR')\n",
    "plt.title('ROC curve')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.04921574, 1.        ])"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.95770862, 1.        ])"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tpr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 1, 0], dtype=object)"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thresholds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
